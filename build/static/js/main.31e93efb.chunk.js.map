{"version":3,"sources":["assets/image/arrow_forward copy.svg","assets/image/minus.svg","assets/image/plus.svg","assets/image/logout.svg","assets/image/catalog.svg","assets/image/products.svg","assets/image/dashboard.svg","assets/image/user_management.svg","assets/image/activity.svg","assets/image/close.svg","assets/image/off.svg","assets/image/on.svg","assets/image/ok.svg","assets/image/no.svg","assets/image/roll_down.svg","assets/image/sort_up.svg","assets/image/sort_down.svg","assets/image/email.svg","assets/image/password.svg","assets/image/graph.png","config.js","actions/api.jsx","containers/App.jsx","components/Head/Head.jsx","components/Panel/Panel.jsx","components/HelperComponents/DialogComponent/DialogComponent.jsx","components/HelperComponents/ContentLoader/ContentLoader.jsx","components/HelperComponents/Pagination/Pagination.jsx","actions/constants.jsx","actions/catalogActions.jsx","components/Catalog/Catalog.jsx","components/Dashboard/Dashboard.jsx","actions/dashboardActions.jsx","components/HelperComponents/SelectComponent/SelectComponent.jsx","components/HelperComponents/RenderField/RenderField.jsx","actions/UserActions.jsx","components/UserManagement/Dialogs/EditDialog.jsx","components/UserManagement/Dialogs/AddingDialog.jsx","components/UserManagement/Dialogs/DeleteDialog.jsx","components/UserManagement/UserManagement.jsx","actions/stockActions.jsx","components/StockManagement/Dialogs/QuantityDialog.jsx","components/StockManagement/Dialogs/RequestDialog.jsx","components/StockManagement/StockManagement.jsx","actions/activityActions.jsx","components/Activity/Activity.jsx","containers/Container/Container.jsx","components/Buttons/DefaultButton/DefaultButton.jsx","actions/authActions.jsx","components/Auth/Login/Login.jsx","components/Auth/Register/SignUp.jsx","components/Auth/Register/SignUpStepSecond.jsx","components/Auth/Register/SignUpStepThird.jsx","components/Auth/PasswordRecovery/FirstStep/FirstStep.jsx","components/Auth/PasswordRecovery/SecondStep/SecondStep.jsx","components/Auth/PasswordRecovery/ThirdStep/ThirdStep.jsx","components/Auth/PasswordRecovery/FourthStep/FourthStep.jsx","containers/AuthContainer/AuthContainer.jsx","routes/routes.js","reducers/reduceAuth.js","reducers/reduceUsers.js","reducers/reduceCatalog.js","reducers/reduceDashboard.js","reducers/reduceActivity.jsx","reducers/reduceStock.js","reducers/index.js","index.js","assets/image/Path.svg","assets/image/new logo.svg"],"names":["module","exports","__webpack_require__","p","API_BASE_URL","window","location","host","api","default","client","axios","create","baseURL","apiUrl","responseType","second","App","props","react_default","a","createElement","react_responsive","Provider","children","Head","handleOut","history","_this","localStorage","clear","push","name","username","email","className","onClick","this","src","logout","alt","Component","connect","state","dispatch","bindActionCreators","Panel","reloading","prevProps","setState","role","Link","to","logo_sidebar","NavLink","dashboard","catalog","products","user_management","activity","DialogComponent","_ref","open","onClose","longDialog","Dialog","classes","root","paper","CloseDialogIcon","Loader","lib","size","color","loading","Pagination","active","pageCount","onChange","pageItemsCount","commentTotalCount","dist_default","forcePage","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","KeyboardArrowLeft_default","nextLabel","KeyboardArrowRight_default","containerClassName","pageClassName","pageLinkClassName","activeLinkClassName","breakClassName","REGISTER_FIRST_STEP","REGISTER_SECOND_STEP","LOGIN","RESET_PASSWORD","CHANGE_PASSWORD","SEND_MESSAGE","GET_USERS_LIST","PATCH_USER","POST_ADD_USER","DELETE_USER","RESET_USER_ERROR","GET_STOCK","SEARCH_STOCK","PATCH_QUANTITY","POST_REQUEST","GET_CLINIC_LOG","GET_CLINIC_DASH_BOARD","GET_ACTIVITY","PAGINATE","GET_CAT","GET_CURRENT_CAT","POST_CAT","PUT_CAT","DELETE_CAT","GET_SUB_CAT","PUT_PRODUCT","DELETE_PRODUCT","CHECK_STOCKS","GET_PRODS_FOR_STOCKS","CREATE_INVENTORY","PATCH_INVENTORY","addCat","data","type","types","payload","request","url","method","getCat","editCat","id","concat","deleteCat","getSubcat","getCurrentCat","addProduct","editProd","deleteProd","paginate","selectedPageNumber","getProdsForStocks","checkStocks","createInventory","patchInventory","Catalog","openDeleteDialog","openEditDialog","openAddDialog","openAddStockDialog","openAddProductDialog","openAddStockCustomDialog","items","categoryProducts","filteredProds","currentCatName","parentCatId","prevCatName","prevCatId","targetId","newItemType","newCategoryName","newProductPrice","currentItemName","currentItemPrice","newProdName","activePage","totalItemsCount","totalPagesCount","next","prev","nameError","priceError","quantityError","supplyQuantityError","minSupplyQuantityError","nameErrorText","priceErrorText","quantityErrorText","supplyQuantityErrorText","minSupplyQuantityErrorText","quantity","autoSup","supply_quantity","min_supply_quantity","newStock","inventoryId","toggleDeleteDialog","arguments","length","undefined","toggleEditDialog","_ref2","toggleAddDialog","_ref3","toggleStockDialog","_ref4","toggleStockCustomDialog","_ref5","toggleAddProductDialog","_ref6","onTypeAction","e","newArr","i","target","value","toLowerCase","includes","console","log","clearSearch","getCategoriesProducts","then","res","status","getCategories","generalData","categories","results","previous","total_pages","count","map","el","index","is_product","endLoading","addNewItem","addClick","qty","addNewCat","addNewProd","_this$state","pathname","split","subcategory_id","redirect","error","response","price","_this$props","_this$state2","lastSlug","changePage","editItem","editClick","_this$state3","_this$state4","deleteItem","deleteClick","_this$state5","_this$state6","autoSupOn","autoSupOff","auto_supply","inventory_id","newQuantity","newSupplyQuantity","newMinSupplyQuantity","addToStock","_this$state7","_this$props2","product_id","moveToSubcategory","_ref7","Object","toConsumableArray","moveBackFromSubcategory","_this$state8","pop","_ref8","noCategoryExist","_ref9","page","customPage","newPage","selected","prevState","_this2","_this$state9","categoryId","react","Path","ContentLoader_ContentLoader","elem","Card","style","width","Img","variant","Body","Title","Text","HelperComponents_Pagination_Pagination","HelperComponents_DialogComponent_DialogComponent","productId","isProduct","placeholder","off","on","prod","key","disabled","Dashboard","getClinicLog","getClinicDashBoard","clinicDashBoard","clinicLog","total_amount","tab","arrow_forward","in_stock","out_stock","moment","date","format","dangerouslySetInnerHTML","__html","text","mapDispatchToProps","DropdownIndicator","components","chunk_80640036_browser_esm","selectProps","menuIsOpen","ExpandMore_default","SelectComponent","onKeyDown","options","change","isClearable","_ref$isSearchable","isSearchable","react_select_browser_esm","classNamePrefix","isDisabled","isLoading","loadingMessage","RenderField","input","_ref$meta","meta","touched","max","warning","min","assign","keyCode","preventDefault","autoComplete","patchUser","deleteUser","postAddUser","getUsersList","resetErrorUsers","EditDialog","label","noErrors","handleChange","event","defineProperty","submitForm","toggler","initialValues","obj","objectSpread","defaultStatus","handleSubmit","fail_err","reset","onSubmit","Field","component","FormControl","HelperComponents_SelectComponent_SelectComponent","validate","values","errors","regExp","RegExp","test","reduxForm","form","enableReinitialize","users","AddingDialog","submitting","pristine","valid","adding_error","DeleteDialog","fontFamily","UserManagement","doRequest","ucFirst","str","toUpperCase","slice","userData","users_list","user","Dialogs_EditDialog","Dialogs_AddingDialog","Dialogs_DeleteDialog","getStock","marker","getSearchList","searchStock","patchQuantity","postRequest","QuantityDialog","sign","product_name","product_quantity","startValue","stock","RequestDialog","StockManagement","totalPages","totalItems","InfoIsOpen","openQuantityDialog","openRequestDialog","openSearch","optionValue","switcherState","someVal","newVal","handleSwitch","timer","timeout","setTimeout","toggleQuantityDialog","toggleRequestDialog","changeTab","pagFunc","openMenu","closeMenu","toggleSearch","togglePopper","handleToggleSearch","searchOnChange","regEx","replace","handleSearchChange","search_list","inputValue","join","handleSearchClick","getItem","toString","clearTimeout","_this3","stock_list","ClickAwayListener","onClickAway","onKeyUp","idx","sort_up","sort_down","row","code","minus","plus","total_price","deleted","roll_down","product_subcategory","ok","no","opacity","Dialogs_QuantityDialog","Dialogs_RequestDialog","getActivity","Activity","activities_list","activityLog","current","Container","match","token","components_Head_Head","components_Panel_Panel","Switch","Route","path","render","components_Dashboard_Dashboard","Redirect","exact","components_Activity_Activity","components_Catalog_Catalog","components_UserManagement_UserManagement","DefaultButton","_ref$variant","_ref$type","formAction","_ref$classes","Button","CircularProgress","postRegisterFirstStep","postRegisterSecondStep","postLogin","postResetPassword","postPasswordApprove","sendMessage","recaptchaRef","React","createRef","Login","reCaptcha","site","recaptcha","recaptchaKey","error_login","password","lib_esm","theme","ref","sitekey","Buttons_DefaultButton_DefaultButton","company","phone","address","auth","SignUp","setItem","JSON","stringify","step_fail","clinic_email","clinic_name","SignUpStepSecond","hospital_credentials","clinic_info","parse","full_name","arrow","SignUpStepThird","toggleDialog","resetError","message","description","FirstStep","SecondStep","ThirdStep","search","security_token","URLSearchParams","substring","get","password_check","FourthStep","AuthContainer","Logo","bgImg","routes","containers_App","INITIAL_STATE","reduceAuth","action","reduceUsers","reduceCatalog","reduceDashboard","reduceActivity","reduceStock","rootReducer","combineReducers","router","connectRouter","formReducer","axiosMiddlewareOptions","interceptors","config","token_res","headers","createBrowserHistory","appRouterMiddleware","routerMiddleware","store","applyMiddleware","multiClientMiddleware","createStore","createStoreWithMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","es","esm","document","getElementById"],"mappings":"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","file":"static/js/main.31e93efb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow_forward copy.f08e2ed1.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.29099d25.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.6cf8e4ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.f3d39002.svg\";","module.exports = __webpack_public_path__ + \"static/media/catalog.6875f34e.svg\";","module.exports = __webpack_public_path__ + \"static/media/products.5f6279cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.927998d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/user_management.1ec7664e.svg\";","module.exports = __webpack_public_path__ + \"static/media/activity.4b323d7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.3fb914fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/off.d35a9a84.svg\";","module.exports = __webpack_public_path__ + \"static/media/on.4bcdbc55.svg\";","module.exports = __webpack_public_path__ + \"static/media/ok.52875933.svg\";","module.exports = __webpack_public_path__ + \"static/media/no.a557581d.svg\";","module.exports = __webpack_public_path__ + \"static/media/roll_down.c0955da8.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort_up.f3f8f276.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort_down.74b0b00d.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.d4fe1dd5.svg\";","module.exports = __webpack_public_path__ + \"static/media/password.32f5b2c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/graph.9494cf59.png\";","let BASE_URL, SECOND_URL;\n\nif(window.location.host === 'localhost:3000') {\n    BASE_URL = 'http://localhost:8000/api/v0';\n} else {\n    BASE_URL = 'http://localhost:8000/api/v0';\n}\n\nSECOND_URL = '';\nexport const API_BASE_URL = BASE_URL;\nexport const API_SECOND_URL = SECOND_URL;\n","import axios from \"axios\";\nimport * as apiUrl from '../config';\n\nexport const api = {\n    default:{\n        client: axios.create({\n            baseURL: apiUrl.API_BASE_URL,\n            responseType: 'json'\n        })\n    },\n    second:{\n        client: axios.create({\n            baseURL: apiUrl.API_SECOND_URL,\n            responseType: 'json'\n        })\n    }\n};\n\nexport default api;\n","import React from 'react';\nimport '../style/main.scss';\nimport { Context as ResponsiveContext } from 'react-responsive';\n\nconst App = (props) => {\n    return (\n        <ResponsiveContext.Provider>\n            {props.children}\n        </ResponsiveContext.Provider>\n    );\n};\n\nexport default App;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport logout from '../../assets/image/logout.svg';\nimport './Head.scss';\n\n\nclass Head extends Component {\n\n    handleOut = () => {\n        const { history } = this.props;\n        localStorage.clear();\n        history.push('/auth/sign-in');\n    };\n\n    render(){\n        const name = localStorage.username;\n        const email = localStorage.email;\n        return (\n            <header className=\"header_wrapper\">\n                <div>\n                    <div className=\"name\">{name}</div>\n                    <div className=\"email\">{email}</div>\n                </div>\n                <button className=\"logout\" onClick={this.handleOut}>\n                    <img src={logout} alt=\"logout\"/>\n                </button>\n            </header>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return{\n\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Head);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, Link } from 'react-router-dom';\nimport logo_sidebar from '../../assets/image/new logo.svg';\nimport catalog from '../../assets/image/catalog.svg';\nimport products from '../../assets/image/products.svg';\nimport dashboard from '../../assets/image/dashboard.svg';\nimport user_management from '../../assets/image/user_management.svg';\nimport activity from '../../assets/image/activity.svg';\nimport './Panel.scss';\n\nclass Panel extends Component {\n\n    state = {\n        reloading: false\n    };\n\n    componentDidUpdate(prevProps) {\n        prevProps.location !== this.props.location && this.setState({ reloading: true })\n    }\n    \n    render() {\n        const role = localStorage.role;\n        return (\n            <div className=\"panel_wrapper\">\n                <div className=\"panel\">\n                    <Link to=\"/main/dashboard\" className=\"logo_panel\">\n                        <img src={logo_sidebar} alt=\"logo_sidebar\"/>\n                    </Link>\n                    <div className=\"block_link\">\n                        {role !== 'user' && <NavLink to=\"/main/dashboard\"><img src={dashboard} alt=\"dashboard\"/></NavLink>}\n                        {role !== 'user' && <NavLink to=\"/main/catalog\"><img src={catalog} alt=\"catalog\"/></NavLink>}\n                        <NavLink to=\"/main/stock-management\"><img src={products} alt=\"products\"/></NavLink>\n                        {role === 'clinic' && <NavLink to=\"/main/user-management\"><img src={user_management} alt=\"user_management\"/></NavLink>}\n                        {role !== 'user' && <NavLink to=\"/main/activity\"><img src={activity} alt=\"activity\"/></NavLink>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Panel);","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport './DialogComponent.scss';\nimport CloseDialogIcon from '../../../assets/image/close.svg';\nconst DialogComponent = ({open, onClose, children, longDialog, onClick}) => {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            classes={{\n                root: 'default_dialog_root',\n                paper:'paper_custom_dialog'\n            }}\n        >\n            <div onClick={onClick} className={longDialog ? \"dialog_wrapper dialog_wrapper_long\" : \"dialog_wrapper\" }>\n                <button\n                    onClick={onClose}\n                    className=\"dialog_close_button\"\n\n                >\n                    <img src={CloseDialogIcon} alt=\"close icon\"/>\n                </button>\n                {children}\n            </div>\n        </Dialog>\n    );\n};\n\nexport default DialogComponent;","import React from 'react';\nimport { MetroSpinner } from \"react-spinners-kit\";\nimport './ContentLoader.css'\n\nconst Loader = () => {\n    return (\n        <div className={'loaderWrapper'}>\n            <MetroSpinner size={70} color=\"#686769\" loading={true}/>\n        </div>\n        )\n};\n\nexport default Loader;","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport PrevIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport NextIcon from '@material-ui/icons/KeyboardArrowRight';\nimport './Pagination.scss';\n\nconst Pagination = ({active, pageCount, pageItemsCount, commentTotalCount, onChange}) => {\n    return (\n        <div className=\"pagination-container\">\n            <ReactPaginate\n                forcePage={active}\n                onPageChange={onChange}\n                pageCount={pageCount}\n                pageRangeDisplayed={2}\n                marginPagesDisplayed={1}\n                previousLabel={<PrevIcon/>}\n                nextLabel={<NextIcon/>}\n                containerClassName=\"pagination-list\"\n                pageClassName=\"pagination-item\"\n                pageLinkClassName=\"pagination-link\"\n                activeLinkClassName=\"pagination-link-active\"\n                breakClassName=\"pagination-ellipsis\"\n            />\n        </div>\n    );\n};\n\nexport default Pagination;","//////////////////////////////auth actions//////////////////////////////\n\nexport const REGISTER_FIRST_STEP           = 'REGISTER_FIRST_STEP';\nexport const REGISTER_FIRST_STEP_FAIL      = 'REGISTER_FIRST_STEP_FAIL';\nexport const REGISTER_FIRST_STEP_SUCCESS      = 'REGISTER_FIRST_STEP_SUCCESS';\n\nexport const REGISTER_SECOND_STEP           = 'REGISTER_SECOND_STEP';\n\nexport const LOGIN           = 'LOGIN';\nexport const LOGIN_FAIL      = 'LOGIN_FAIL';\n\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\n\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nexport const CHANGE_PASSWORD_FAIL = 'CHANGE_PASSWORD_FAIL';\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\n\n////////////////////////////user actions//////////////////////////////////\nexport const GET_USERS_LIST     = 'GET_USERS_LIST';\nexport const GET_USERS_LIST_SUCCESS = 'GET_USERS_LIST_SUCCESS';\n\nexport const PATCH_USER         = 'PATCH_USER';\nexport const PATCH_USER_FAIL         = 'PATCH_USER_FAIL';\n\nexport const POST_ADD_USER         = 'POST_ADD_USER';\nexport const POST_ADD_USER_FAIL         = 'POST_ADD_USER_FAIL';\n\nexport const DELETE_USER         = 'DELETE_USER';\n\nexport const RESET_USER_ERROR         = 'RESET_USER_ERROR';\n\n////////////////////////////stock actions//////////////////////////////////\n\nexport const GET_STOCK              = 'GET_STOCK';\nexport const GET_STOCK_SUCCESS      = 'GET_STOCK_SUCCESS';\n\nexport const SEARCH_STOCK              = 'SEARCH_STOCK';\nexport const SEARCH_STOCK_SUCCESS      = 'SEARCH_STOCK_SUCCESS';\n\nexport const PATCH_QUANTITY         = 'PATCH_QUANTITY';\nexport const PATCH_QUANTITY_FAIL    = 'PATCH_QUANTITY_FAIL';\n\nexport const POST_REQUEST           = 'POST_REQUEST';\nexport const POST_REQUEST_FAIL      = 'POST_REQUEST_FAIL';\n\n///////////////////////////////////////////////////////////////////////////\n\nexport const GET_CLINIC_LOG = 'GET_CLINIC_LOG';\nexport const GET_CLINIC_LOG_SUCCESS = 'GET_CLINIC_LOG_SUCCESS';\n\nexport const GET_CLINIC_DASH_BOARD = 'GET_CLINIC_DASH_BOARD';\nexport const GET_CLINIC_DASH_BOARD_SUCCESS = 'GET_CLINIC_DASH_BOARD_SUCCESS';\n\n\nexport const GET_ACTIVITY = 'GET_ACTIVITY';\nexport const GET_ACTIVITY_SUCCESS = 'GET_ACTIVITY_SUCCESS';\n\n//////////////////////////////categories actions//////////////////////////////\n\nexport const PAGINATE = 'PAGINATE';\nexport const PAGINATE_FAIL = 'PAGINATE_FAIL';\n\nexport const GET_CAT = 'GET_CAT';\nexport const GET_CAT_FAIL = 'GET_CAT_FAIL';\n\nexport const GET_CURRENT_CAT = 'GET_CURRENT_CAT';\nexport const GET_CURRENT_CAT_FAIL = 'GET_CURRENT_CAT_FAIL';\n\nexport const POST_CAT = 'POST_CAT';\nexport const POST_CAT_FAIL = 'POST_CAT_FAIL';\n\nexport const PUT_CAT = 'PUT_CAT';\nexport const PUT_CAT_FAIL = 'PUT_CAT_FAIL';\n\nexport const DELETE_CAT = 'DELETE_CAT';\nexport const DELETE_CAT_FAIL = 'DELETE_CAT_FAIL';\n\nexport const GET_SUB_CAT = 'GET_SUB_CAT';\nexport const GET_SUB_CAT_FAIL = 'GET_SUB_CAT_FAIL';\n\nexport const POST_SUB_CAT = 'POST_SUB_CAT';\nexport const POST_SUB_CAT_FAIL = 'POST_SUB_CAT_FAIL';\n\nexport const DELETE_SUB_CAT = 'DELETE_SUB_CAT';\nexport const DELETE_SUB_CAT_FAIL = 'DELETE_SUB_CAT_FAIL';\n\nexport const GET_PRODUCT = 'GET_PRODUCT';\nexport const GET_PRODUCT_FAIL = 'GET_PRODUCT_FAIL';\n\nexport const PUT_PRODUCT = 'PUT_PRODUCT';\nexport const PUT_PRODUCT_FAIL = 'PUT_PRODUCT_FAIL';\n\nexport const POST_PRODUCT = 'POST_PRODUCT';\nexport const POST_PRODUCT_FAIL = 'POST_PRODUCT_FAIL';\n\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL';\n\nexport const CHECK_STOCKS = 'CHECK_STOCKS';\nexport const CHECK_STOCKS_FAIL = 'CHECK_STOCKS_FAIL';\n\nexport const GET_PRODS_FOR_STOCKS = 'GET_PRODS_FOR_STOCKS';\nexport const GET_PRODS_FOR_STOCKS_FAIL = 'GET_PRODS_FOR_STOCKS_FAIL';\n\nexport const CREATE_INVENTORY = 'CREATE_INVENTORY';\nexport const CREATE_INVENTORY_FAIL = 'CREATE_INVENTORY_FAIL';\n\nexport const PATCH_INVENTORY = 'PATCH_INVENTORY';\nexport const PATCH_INVENTORY_FAIL = 'PATCH_INVENTORY_FAIL';","import * as types from './constants.jsx';\n// categories\nexport function addCat(data) {\n    return {\n        type: types.POST_CAT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/subcategory/`,\n                method: \"POST\",\n                data\n            }\n        }\n    };\n}\n\nexport function getCat() {\n    return {\n        type: types.GET_CAT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/categories/`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function editCat(id, data) {\n    return {\n        type: types.PUT_CAT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/subcategory/${id}/`,\n                method: \"PUT\",\n                data\n            }\n        }\n    };\n}\n\nexport function deleteCat(id) {\n    return {\n        type: types.DELETE_CAT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/subcategory/${id}`,\n                method: \"DELETE\",\n            }\n        }\n    };\n}\n// subcategories\nexport function getSubcat(id) {\n    return {\n        type: types.GET_SUB_CAT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/subcategories/${id}/`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function getCurrentCat(id) {\n    return {\n        type: types.GET_CURRENT_CAT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/subcategory/${id}/`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n// products\nexport function addProduct(data) {\n    return {\n        type: types.GET_SUB_CAT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/product/`,\n                method: \"POST\",\n                data\n            }\n        }\n    };\n}\n\nexport function editProd(id, data) {\n    return {\n        type: types.PUT_PRODUCT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/product/${id}/`,\n                method: \"PUT\",\n                data\n            }\n        }\n    };\n}\n\nexport function deleteProd(id) {\n    return {\n        type: types.DELETE_PRODUCT,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/product/${id}`,\n                method: \"DELETE\",\n            }\n        }\n    };\n}\n// paginate\nexport function paginate(selectedPageNumber, id) {\n    return {\n        type: types.PAGINATE,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/${id ? 'subcategories/' + id : 'categories/'}?page=${selectedPageNumber}`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n// add to stock\nexport function getProdsForStocks(id) {\n    return {\n        type: types.GET_PRODS_FOR_STOCKS,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/subcategory/products/`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function checkStocks(id) {\n    return {\n        type: types.CHECK_STOCKS,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/product/${id}/`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function createInventory(data) {\n    return {\n        type: types.CREATE_INVENTORY,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory/`,\n                method: \"POST\",\n                data\n            }\n        }\n    };\n}\n\nexport function patchInventory(id, data) {\n    return {\n        type: types.PATCH_INVENTORY,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory/${id}/`,\n                method: \"PATCH\",\n                data\n            }\n        }\n    };\n}","import React, {Component, Fragment} from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {Link, withRouter} from 'react-router-dom';\nimport DialogComponent from \"../HelperComponents/DialogComponent/DialogComponent\";\nimport Loader from '../HelperComponents/ContentLoader/ContentLoader'\nimport Pagination from '../HelperComponents/Pagination/Pagination';\nimport { Card } from 'react-bootstrap';\nimport 'holderjs'\nimport Path from '../../assets/image/Path.svg';\nimport off from '../../assets/image/off.svg';\nimport on from '../../assets/image/on.svg';\nimport './Catalog.scss';\n\nimport { getCat, addCat, getSubcat, addProduct, getCurrentCat, editCat, editProd, deleteProd, deleteCat, paginate, checkStocks, createInventory, patchInventory, getProdsForStocks } from '../../actions/catalogActions';\n\n\nclass Catalog extends Component {\n    state = {\n        openDeleteDialog: false,\n        openEditDialog: false,\n        openAddDialog: false,\n        openAddStockDialog: false,\n        openAddProductDialog: false,\n        openAddStockCustomDialog: false,\n\n        items: [[],[]],\n        categoryProducts: [],\n        filteredProds: [],\n        currentCatName: '',\n        parentCatId: false,\n        prevCatName: [],\n        prevCatId: [],\n        targetId: '',\n        newItemType: '',\n        newCategoryName: '',\n        newProductPrice: '',\n        currentItemName: '',\n        currentItemPrice: '',\n        newProdName: '',\n\n        activePage: 1,\n        totalItemsCount: 0,\n        totalPagesCount: 0,\n        next: '',\n        prev: '',\n        reloading: false,\n        loading: true,\n\n        nameError: false,\n        priceError: false,\n        quantityError: false,\n        supplyQuantityError: false,\n        minSupplyQuantityError: false,\n        nameErrorText: '',\n        priceErrorText: '',\n        quantityErrorText: '',\n        supplyQuantityErrorText: '',\n        minSupplyQuantityErrorText: '',\n\n        quantity: '',\n        autoSup: false,\n        supply_quantity: '',\n        min_supply_quantity: '',\n        newStock: false,\n        inventoryId: ''\n    };\n\n    componentDidMount() {\n        const {  history: { location: { pathname } } } = this.props;\n        let lastSlug = pathname.split('/')[pathname.split('/').length - 1];\n        if(lastSlug === 'catalog') {\n            this.getCategories();\n        }else{\n            this.getCurrentCat(lastSlug);\n            this.redirect(lastSlug);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {  history: { location: { pathname } } } = this.props;\n        let lastSlug = pathname.split('/')[pathname.split('/').length - 1];\n\n        if(this.props.catalog !== prevProps.catalog) {\n            if(lastSlug === 'catalog') {\n                this.getCategories();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.setState({\n            openDeleteDialog: false,\n            openEditDialog: false,\n            openAddDialog: false,\n            openAddStockDialog: false,\n            openAddProductDialog: false,\n            openAddStockCustomDialog: false,\n\n            items: [[],[]],\n            categoryProducts: [],\n            filteredProds: [],\n            currentCatName: '',\n            parentCatId: false,\n            targetId: '',\n            newItemType: '',\n            newCategoryName: '',\n            newProductPrice: '',\n            newProdName: '',\n\n            activePage: 1,\n            totalItemsCount: 0,\n            totalPagesCount: 0,\n            next: '',\n            prev: '',\n            loading: true,\n\n            nameError: false,\n            priceError: false,\n            quantityError: false,\n            supplyQuantityError: false,\n            minSupplyQuantityError: false,\n            nameErrorText: '',\n            priceErrorText: '',\n            quantityErrorText: '',\n            supplyQuantityErrorText: '',\n            minSupplyQuantityErrorText: '',\n\n            quantity: '',\n            autoSup: false,\n            supply_quantity: '',\n            min_supply_quantity: '',\n            newStock: false,\n            inventoryId: ''\n        });\n    }\n\n    toggleDeleteDialog = (id = null) => {\n        this.setState(({openDeleteDialog}) => ({\n            openDeleteDialog: !openDeleteDialog,\n        }));\n    };\n\n    toggleEditDialog = (id = null) => {\n        this.setState(({\n                           openEditDialog,\n                           nameError,\n                           priceError,\n                           nameErrorText,\n                           priceErrorText,\n                           quantityError,\n                           supplyQuantityError,\n                           minSupplyQuantityError,\n                           quantityErrorText,\n                           supplyQuantityErrorText,\n                           minSupplyQuantityErrorText\n                       }) => ({\n            openEditDialog: !openEditDialog,\n            nameError: openEditDialog ? !nameError : nameError,\n            priceError: openEditDialog ? !priceError : priceError,\n            nameErrorText: openEditDialog ? '' : nameErrorText,\n            priceErrorText: openEditDialog ? '' : priceErrorText,\n            quantityError: openEditDialog ? !quantityError : quantityError,\n            supplyQuantityError: openEditDialog ? !supplyQuantityError : supplyQuantityError,\n            minSupplyQuantityError: openEditDialog ? !minSupplyQuantityError : minSupplyQuantityError,\n            quantityErrorText: openEditDialog ? '' : quantityErrorText,\n            supplyQuantityErrorText: openEditDialog ? '' : supplyQuantityErrorText,\n            minSupplyQuantityErrorText: openEditDialog ? '' : minSupplyQuantityErrorText,\n        }))\n    };\n\n    toggleAddDialog = (id = null) => {\n        this.setState(({\n                           openAddDialog,\n                           nameError,\n                           priceError,\n                           nameErrorText,\n                           priceErrorText,\n                           quantityError,\n                           supplyQuantityError,\n                           minSupplyQuantityError,\n                           quantityErrorText,\n                           supplyQuantityErrorText,\n                           minSupplyQuantityErrorText\n                       }) => ({\n            openAddDialog: !openAddDialog,\n            nameError: openAddDialog ? !nameError : nameError,\n            priceError: openAddDialog ? !priceError : priceError,\n            nameErrorText: openAddDialog ? '' : nameErrorText,\n            priceErrorText: openAddDialog ? '' : priceErrorText,\n            quantityError: openAddDialog ? !quantityError : quantityError,\n            supplyQuantityError: openAddDialog ? !supplyQuantityError : supplyQuantityError,\n            minSupplyQuantityError: openAddDialog ? !minSupplyQuantityError : minSupplyQuantityError,\n            quantityErrorText: openAddDialog ? '' : quantityErrorText,\n            supplyQuantityErrorText: openAddDialog ? '' : supplyQuantityErrorText,\n            minSupplyQuantityErrorText: openAddDialog ? '' : minSupplyQuantityErrorText,\n        }))\n    };\n\n    toggleStockDialog = (id = null) => {\n        this.setState(({\n                           openAddStockDialog,\n                           openAddProductDialog,\n                           nameError,\n                           priceError,\n                           nameErrorText,\n                           priceErrorText,\n                           quantityError,\n                           supplyQuantityError,\n                           minSupplyQuantityError,\n                           quantityErrorText,\n                           supplyQuantityErrorText,\n                           minSupplyQuantityErrorText\n                       }) => ({\n            openAddStockDialog: !openAddStockDialog,\n            openAddProductDialog: openAddProductDialog ? !openAddProductDialog : openAddProductDialog,\n            nameError: openAddStockDialog ? !nameError : nameError,\n            priceError: openAddStockDialog ? !priceError : priceError,\n            nameErrorText: openAddStockDialog ? '' : nameErrorText,\n            priceErrorText: openAddStockDialog ? '' : priceErrorText,\n            quantityError: openAddStockDialog ? !quantityError : quantityError,\n            supplyQuantityError: openAddStockDialog ? !supplyQuantityError : supplyQuantityError,\n            minSupplyQuantityError: openAddStockDialog ? !minSupplyQuantityError : minSupplyQuantityError,\n            quantityErrorText: openAddStockDialog ? '' : quantityErrorText,\n            supplyQuantityErrorText: openAddStockDialog ? '' : supplyQuantityErrorText,\n            minSupplyQuantityErrorText: openAddStockDialog ? '' : minSupplyQuantityErrorText,\n        }));\n    };\n\n    toggleStockCustomDialog = (id = null) => {\n        this.setState(({\n                           openAddStockCustomDialog,\n                           openAddProductDialog,\n                           nameError,\n                           priceError,\n                           nameErrorText,\n                           priceErrorText,\n                           quantityError,\n                           supplyQuantityError,\n                           minSupplyQuantityError,\n                           quantityErrorText,\n                           supplyQuantityErrorText,\n                           minSupplyQuantityErrorText\n                       }) => ({\n            openAddStockCustomDialog: !openAddStockCustomDialog,\n            openAddProductDialog: openAddProductDialog ? !openAddProductDialog : openAddProductDialog,\n            quantity: '',\n            currentItemPrice: '',\n            nameError: openAddStockCustomDialog ? !nameError : nameError,\n            priceError: openAddStockCustomDialog ? !priceError : priceError,\n            nameErrorText: openAddStockCustomDialog ? '' : nameErrorText,\n            priceErrorText: openAddStockCustomDialog ? '' : priceErrorText,\n            quantityError: openAddStockCustomDialog ? !quantityError : quantityError,\n            supplyQuantityError: openAddStockCustomDialog ? !supplyQuantityError : supplyQuantityError,\n            minSupplyQuantityError: openAddStockCustomDialog ? !minSupplyQuantityError : minSupplyQuantityError,\n            quantityErrorText: openAddStockCustomDialog ? '' : quantityErrorText,\n            supplyQuantityErrorText: openAddStockCustomDialog ? '' : supplyQuantityErrorText,\n            minSupplyQuantityErrorText: openAddStockCustomDialog ? '' : minSupplyQuantityErrorText,\n        }));\n    };\n\n    toggleAddProductDialog = (id = null) => {\n        this.setState(({\n                           openAddProductDialog,\n                           nameError,\n                           priceError,\n                           nameErrorText,\n                           priceErrorText,\n                           quantityError,\n                           supplyQuantityError,\n                           minSupplyQuantityError,\n                           quantityErrorText,\n                           supplyQuantityErrorText,\n                           minSupplyQuantityErrorText\n                       }) => ({\n            openAddProductDialog: !openAddProductDialog,\n            filteredProds: [],\n            nameError: openAddProductDialog ? !nameError : nameError,\n            priceError: openAddProductDialog ? !priceError : priceError,\n            nameErrorText: openAddProductDialog ? '' : nameErrorText,\n            priceErrorText: openAddProductDialog ? '' : priceErrorText,\n            quantityError: openAddProductDialog ? !quantityError : quantityError,\n            supplyQuantityError: openAddProductDialog ? !supplyQuantityError : supplyQuantityError,\n            minSupplyQuantityError: openAddProductDialog ? !minSupplyQuantityError : minSupplyQuantityError,\n            quantityErrorText: openAddProductDialog ? '' : quantityErrorText,\n            supplyQuantityErrorText: openAddProductDialog ? '' : supplyQuantityErrorText,\n            minSupplyQuantityErrorText: openAddProductDialog ? '' : minSupplyQuantityErrorText,\n        }));\n    };\n\n    onTypeAction = (e) => {\n        const { categoryProducts } = this.state;\n        let newArr = [];\n\n        for(let i = 0; i < categoryProducts.length; i++) {\n            if(e.target.value.length < 1) {\n                newArr = [];\n            }else if(categoryProducts[i].name.toLowerCase().includes(e.target.value.toLowerCase())) {\n                newArr.push(categoryProducts[i]);\n            }\n            if(categoryProducts[i].name.toLowerCase() === e.target.value.toLowerCase()) {\n                console.log(categoryProducts[i], 'ошибка');\n                this.setState({\n                    nameError: true,\n                    nameErrorText: 'Product with the same name already exists in this category/subcategory.',\n                });\n                break;\n            }else {\n                console.log('нет ошибки');\n                this.setState({\n                    nameError: false,\n                    nameErrorText: '',\n                });\n            }\n        }\n\n        this.setState({\n            newProdName: e.target.value,\n            filteredProds: newArr\n        });\n\n    };\n\n    clearSearch = () => {\n        this.setState({\n            filteredProds: []\n        });\n    };\n\n    newCategoryName = (e) => {\n        this.setState({\n            newCategoryName: e.target.value,\n            currentItemName: e.target.value\n        });\n    };\n\n    newProductPrice = (e) => {\n        this.setState({\n            newProductPrice: e.target.value,\n            currentItemPrice: e.target.value\n        });\n    };\n\n    getCategoriesProducts = () => {\n        const {getProdsForStocks} = this.props;\n\n        getProdsForStocks().then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.setState({\n                    categoryProducts: res.payload.data\n                });\n            }\n        });\n    };\n\n    getCategories = () => {\n        const { getCat } = this.props;\n        let generalData = [],\n            categories = [],\n            products = [],\n            next = '',\n            prev = '',\n            totalPagesCount = 0,\n            totalItemsCount = 0;\n\n        this.setState({\n            loading: true\n        });\n\n        getCat().then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                generalData = res.payload.data.results;\n                next = res.payload.data.next;\n                prev = res.payload.data.previous;\n                totalPagesCount = res.payload.data.total_pages;\n                totalItemsCount = res.payload.data.count;\n                generalData.map((el, index) => {\n                    el.is_product ? products.push(el) : categories.push(el);\n                });\n                this.setState({\n                    items: [categories, []],\n                    parentCatId: false,\n                    totalItemsCount: totalItemsCount,\n                    totalPagesCount: totalPagesCount,\n                    next: next,\n                    prev: prev,\n                    prevCatId: [],\n                    prevCatName: [],\n                    activePage: 1,\n                    currentCatName: false,\n                });\n                this.endLoading();\n            }\n        });\n    };\n\n    getSubcat = (parentCatId) => {\n        const { getSubcat } = this.props;\n        let generalData = [],\n            categories = [],\n            products = [],\n            next = '',\n            prev = '',\n            totalPagesCount = 0,\n            totalItemsCount = 0;\n\n        this.setState({\n            loading: true\n        });\n\n        getSubcat(parentCatId).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                generalData = res.payload.data.results;\n                next = res.payload.data.next;\n                prev = res.payload.data.previous;\n                totalPagesCount = res.payload.data.total_pages;\n                totalItemsCount = res.payload.data.count;\n\n                generalData.map((el, index) => {\n                    el.is_product ? products.push(el) : categories.push(el);\n                });\n\n                this.setState({\n                    items: [categories, products],\n                    totalItemsCount: totalItemsCount,\n                    totalPagesCount: totalPagesCount,\n                    next: next,\n                    prev: prev,\n                    activePage: 1\n                });\n                this.endLoading();\n            } else {\n                this.setState({\n                    items: [[], []],\n                    totalItemsCount: 0,\n                    totalPagesCount: 0,\n                    next: false,\n                    prev: false,\n                    activePage: 1\n                });\n                this.endLoading();\n            }\n        });\n    };\n\n    addNewItem = (type) => {\n        this.setState({\n            newItemType: type\n        });\n        switch (type){\n            case 'cat' :\n                this.toggleAddDialog();\n                break;\n            case 'prod' :\n                this.getCategoriesProducts();\n                this.toggleAddProductDialog();\n                break;\n            default:\n                this.toggleAddDialog();\n        }\n    };\n\n    addClick = ( qty ) => {\n        const type = this.state.newItemType;\n\n        switch (type) {\n            case 'cat':\n                this.addNewCat();\n                break;\n            case 'sub':\n                this.addNewCat(this.state.parentCatId);\n                break;\n            case 'prod':\n                this.addNewProd(qty);\n                break;\n            default:\n                console.log( \"Такое создать нельзя\", type );\n        }\n    };\n\n    addNewCat = (id) => {\n        let { newCategoryName, parentCatId } = this.state,\n            data = {\n                name: newCategoryName\n            },\n            { history: { location: { pathname } } } = this.props,\n            { items } = this.state,\n            lastSlug = pathname.split('/')[pathname.split('/').length - 1];\n\n\n        const { addCat } = this.props;\n\n        if(id !== undefined) data.subcategory_id = id;\n        addCat(data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 201) {\n\n                this.getCurrentCat(res.payload.data.id);\n                this.redirect(res.payload.data.id);\n\n                this.endLoading();\n                this.toggleAddDialog();\n            }else {\n                if(res.error.response.data.name && res.error.response.data.price) {\n                    this.setState({\n                        nameError: true,\n                        priceError: true,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: res.error.response.data.price\n                    })\n                }else if(res.error.response.data.name) {\n                    this.setState({\n                        nameError: true,\n                        priceError: false,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: ''\n                    })\n                }else if(res.error.response.data.price) {\n                    this.setState({\n                        nameError: false,\n                        priceError: true,\n                        nameErrorText: '',\n                        priceErrorText: res.error.response.data.price\n                    })\n                }\n            }\n        });\n    };\n\n    addNewProd = ( qty ) => {\n        const { addProduct, history: { location: { pathname } } } = this.props;\n        const { newCategoryName, newProductPrice, parentCatId, totalPagesCount, quantity, newProdName } = this.state;\n        let data = {\n                price: +newProductPrice,\n                subcategory_id: parentCatId\n            },\n            items = this.state.items,\n            lastSlug = pathname.split('/')[pathname.split('/').length - 1];\n\n        if (qty) {\n            data.name = newProdName;\n            data.quantity = quantity;\n        } else {\n            data.name = newCategoryName;\n        }\n\n        addProduct(data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 201) {\n                if(items[0].length + items[1].length < 10){\n                    items[1].push(res.payload.data);\n                    this.setState({\n                        items: items,\n                        openDeleteDialog: false,\n                        openEditDialog: false,\n                        openAddDialog: false,\n                        openAddStockDialog: false,\n                        openAddProductDialog: false,\n                        openAddStockCustomDialog: false,\n                        quantity: '',\n                        autoSup: false,\n                        supply_quantity: '',\n                        min_supply_quantity: '',\n                        newProductPrice: '',\n                        currentItemPrice: '',\n                        quantityError: false,\n                        quantityErrorText: '',\n                    });\n                }else{\n                    this.getCurrentCat(lastSlug);\n                    this.changePage(false, totalPagesCount);\n                }\n                this.endLoading();\n            }else {\n                if(res.error.response.data.name && res.error.response.data.price) {\n                    this.setState({\n                        nameError: true,\n                        priceError: true,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: res.error.response.data.price,\n                        quantityError: false,\n                        quantityErrorText: '',\n                    })\n                }else if(res.error.response.data.name) {\n                    this.setState({\n                        nameError: true,\n                        priceError: false,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: '',\n                        quantityError: false,\n                        quantityErrorText: '',\n                    })\n                }else if(res.error.response.data.price) {\n                    this.setState({\n                        nameError: false,\n                        priceError: true,\n                        nameErrorText: '',\n                        priceErrorText: res.error.response.data.price,\n                        quantityError: false,\n                        quantityErrorText: '',\n                    })\n                }else if(res.error.response.data.quantity) {\n                    this.setState({\n                        quantityError: true,\n                        quantityErrorText: res.error.response.data.quantity,\n                        nameError: false,\n                        priceError: false,\n                        nameErrorText: '',\n                        priceErrorText: ''\n                    })\n                }\n            }\n        });\n    };\n\n    editItem = (type, targetId, currentItemName, currentItemPrice) => {\n        this.setState({\n            newItemType: type,\n            targetId: targetId,\n            currentItemName: currentItemName,\n            currentItemPrice: currentItemPrice,\n            newProductPrice: currentItemPrice,\n            newCategoryName: currentItemName\n        });\n        this.toggleEditDialog();\n    };\n\n    editClick = () => {\n        const type = this.state.newItemType;\n\n        switch (type) {\n            case 'cat':\n                this.editCat();\n                break;\n            case 'sub':\n                this.editCat();\n                break;\n            case 'prod':\n                this.editProd();\n                break;\n            default:\n                console.log( \"Такое изменить нельзя\", type );\n        }\n    };\n\n    editCat = () => {\n        let { newCategoryName, targetId, parentCatId } = this.state,\n            data = {\n                name: newCategoryName\n            },\n            { history: { location: { pathname } } } = this.props,\n            { items } = this.state,\n            lastSlug = pathname.split('/')[pathname.split('/').length - 1];\n\n\n        const { editCat } = this.props;\n\n        if(this.state.newItemType === 'sub') data.subcategory_id = parentCatId;\n        editCat(targetId, data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n\n                if(lastSlug === 'catalog') {\n                    this.getCategories();\n                }else{\n                    this.getCurrentCat(parentCatId);\n                    this.getSubcat(parentCatId);\n                }\n\n                this.endLoading();\n                this.toggleEditDialog();\n            }else {\n                if(res.error.response.data.name && res.error.response.data.price) {\n                    this.setState({\n                        nameError: true,\n                        priceError: true,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: res.error.response.data.price\n                    })\n                }else if(res.error.response.data.name) {\n                    this.setState({\n                        nameError: true,\n                        priceError: false,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: ''\n                    })\n                }else if(res.error.response.data.price) {\n                    this.setState({\n                        nameError: false,\n                        priceError: true,\n                        nameErrorText: '',\n                        priceErrorText: res.error.response.data.price\n                    })\n                }\n            }\n        });\n    };\n\n    editProd = () => {\n        let { newCategoryName, newProductPrice, targetId, parentCatId } = this.state,\n            data = {\n                name: newCategoryName,\n                price: newProductPrice,\n                subcategory_id: parentCatId\n            },\n            { history: { location: { pathname } } } = this.props;\n        const { editProd } = this.props;\n\n        console.log(data);\n        editProd(targetId, data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.getCurrentCat(parentCatId);\n                this.getSubcat(parentCatId);\n\n                this.endLoading();\n                this.toggleEditDialog();\n            }else {\n                if(res.error.response.data.name && res.error.response.data.price) {\n                    this.setState({\n                        nameError: true,\n                        priceError: true,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: res.error.response.data.price\n                    })\n                }else if(res.error.response.data.name) {\n                    this.setState({\n                        nameError: true,\n                        priceError: false,\n                        nameErrorText: res.error.response.data.name,\n                        priceErrorText: ''\n                    })\n                }else if(res.error.response.data.price) {\n                    this.setState({\n                        nameError: false,\n                        priceError: true,\n                        nameErrorText: '',\n                        priceErrorText: res.error.response.data.price\n                    })\n                }\n            }\n        });\n    };\n\n    deleteItem = (type, targetId, currentItemName) => {\n        this.setState({\n            newItemType: type,\n            targetId: targetId,\n            currentItemName: currentItemName\n        });\n        this.toggleDeleteDialog();\n    };\n\n    deleteClick = () => {\n        const type = this.state.newItemType;\n\n        switch (type) {\n            case 'cat':\n                this.deleteCat();\n                break;\n            case 'sub':\n                this.deleteCat();\n                break;\n            case 'prod':\n                this.deleteProd();\n                break;\n            default:\n        }\n    };\n\n    deleteProd = () => {\n        let { targetId, parentCatId } = this.state,\n            { history: { location: { pathname } } } = this.props;\n        const { deleteProd } = this.props;\n\n        deleteProd(targetId).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.getCurrentCat(parentCatId);\n                this.getSubcat(parentCatId);\n\n                this.endLoading();\n                this.toggleDeleteDialog();\n            }\n        });\n    };\n\n    deleteCat = () => {\n        let { targetId, parentCatId } = this.state,\n            { history: { location: { pathname } } } = this.props,\n            lastSlug = pathname.split('/')[pathname.split('/').length - 1];\n        const { deleteCat } = this.props;\n\n        deleteCat(targetId).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                if(lastSlug === 'catalog') {\n                    this.getCategories();\n                }else{\n                    this.getCurrentCat(parentCatId);\n                    this.getSubcat(parentCatId);\n                }\n\n                this.endLoading();\n                this.toggleDeleteDialog();\n            }\n        });\n    };\n\n    autoSupOn = () => {\n        this.setState({\n            autoSup: true\n        });\n    };\n\n    autoSupOff = () => {\n        this.setState({\n            autoSup: false\n        });\n    };\n\n    checkStocks = id => {\n        const { checkStocks } = this.props;\n\n        this.setState({\n            targetId: id,\n        });\n\n        checkStocks(id).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.setState({\n                    quantity: res.payload.data.quantity,\n                    autoSup: res.payload.data.auto_supply,\n                    supply_quantity: res.payload.data.supply_quantity,\n                    min_supply_quantity: res.payload.data.min_supply_quantity,\n                    newStock: false,\n                    inventoryId: res.payload.data.inventory_id\n                });\n                this.toggleStockDialog();\n            }else if(res.error.response.status === 404) {\n                this.setState({\n                    inventoryId: false,\n                    supply_quantity: false,\n                    min_supply_quantity: false,\n                    quantity: false,\n                    autoSup: false,\n                    newStock: true\n                });\n                this.toggleStockDialog();\n            }\n        });\n    };\n\n    newQuantity = (e) => {\n        this.setState({\n            quantity: e.target.value\n        });\n    };\n\n    newSupplyQuantity = (e) => {\n        this.setState({\n            supply_quantity: e.target.value\n        });\n    };\n\n    newMinSupplyQuantity = (e) => {\n        this.setState({\n            min_supply_quantity: e.target.value\n        });\n    };\n\n    addToStock = () => {\n        const { targetId, quantity, autoSup, supply_quantity, min_supply_quantity, newStock, inventoryId } = this.state;\n        const {createInventory, patchInventory} = this.props;\n\n        let data = {\n            auto_supply: autoSup,\n        };\n        if(quantity) data.quantity = +quantity;\n        if(supply_quantity) data.supply_quantity = +supply_quantity;\n        if(min_supply_quantity) data.min_supply_quantity = +min_supply_quantity;\n\n\n        if(newStock) {\n            data.product_id = targetId;\n            createInventory(data).then(res => {\n                if (res.payload && res.payload.status && res.payload.status === 201) {\n                    this.setState({\n                        quantityError: false,\n                        quantityErrorText: '',\n                        supplyQuantityError: false,\n                        supplyQuantityErrorText: '',\n                        minSupplyQuantityError: false,\n                        minSupplyQuantityErrorText: '',\n                    });\n                    this.toggleStockDialog();\n                } else if(res.error.response.data.quantity) {\n                    this.setState({\n                        quantityError: true,\n                        quantityErrorText: res.error.response.data.quantity,\n                        supplyQuantityError: false,\n                        supplyQuantityErrorText: '',\n                        minSupplyQuantityError: false,\n                        minSupplyQuantityErrorText: '',\n                    })\n                }else if(res.error.response.data.supply_quantity) {\n                    this.setState({\n                        supplyQuantityError: true,\n                        supplyQuantityErrorText: res.error.response.data.supply_quantity,\n                        quantityError: false,\n                        quantityErrorText: '',\n                        minSupplyQuantityError: false,\n                        minSupplyQuantityErrorText: '',\n                    })\n                }else if(res.error.response.data.min_supply_quantity) {\n                    this.setState({\n                        minSupplyQuantityError: true,\n                        minSupplyQuantityErrorText: res.error.response.data.min_supply_quantity,\n                        quantityError: false,\n                        quantityErrorText: '',\n                        supplyQuantityError: false,\n                        supplyQuantityErrorText: '',\n                    })\n                }\n            });\n        }else {\n            patchInventory(inventoryId, data).then(res => {\n                if (res.payload && res.payload.status && res.payload.status === 200) {\n                    this.setState({\n                        quantityError: false,\n                        quantityErrorText: '',\n                        supplyQuantityError: false,\n                        supplyQuantityErrorText: '',\n                        minSupplyQuantityError: false,\n                        minSupplyQuantityErrorText: '',\n                    });\n                    this.toggleStockDialog();\n                }else if(res.error.response.data.quantity) {\n                    this.setState({\n                        quantityError: true,\n                        quantityErrorText: res.error.response.data.quantity,\n                        supplyQuantityError: false,\n                        supplyQuantityErrorText: '',\n                        minSupplyQuantityError: false,\n                        minSupplyQuantityErrorText: '',\n                    })\n                }else if(res.error.response.data.supply_quantity) {\n                    this.setState({\n                        supplyQuantityError: true,\n                        supplyQuantityErrorText: res.error.response.data.supply_quantity,\n                        quantityError: false,\n                        quantityErrorText: '',\n                        minSupplyQuantityError: false,\n                        minSupplyQuantityErrorText: '',\n                    })\n                }else if(res.error.response.data.min_supply_quantity) {\n                    this.setState({\n                        minSupplyQuantityError: true,\n                        minSupplyQuantityErrorText: res.error.response.data.min_supply_quantity,\n                        quantityError: false,\n                        quantityErrorText: '',\n                        supplyQuantityError: false,\n                        supplyQuantityErrorText: '',\n                    })\n                }\n            });\n        }\n    };\n\n    moveToSubcategory = (parentCatId, currentCatName) => {\n        this.setState(({prevCatId, prevCatName}) => ({\n            prevCatId: [...prevCatId, parentCatId],\n            prevCatName: [...prevCatName, currentCatName],\n            currentCatName: currentCatName,\n            parentCatId: parentCatId,\n            items: []\n        }));\n\n        this.redirect(parentCatId);\n    };\n\n    moveBackFromSubcategory = () => {\n        const {prevCatId, prevCatName} = this.state;\n        prevCatId.pop();\n        prevCatName.pop();\n\n        this.setState({\n            prevCatId: prevCatId,\n            prevCatName: prevCatName,\n            currentCatName: prevCatName[prevCatName.length - 1],\n            parentCatId: prevCatId[prevCatId.length - 1]\n        });\n\n        this.redirect(prevCatId[prevCatId.length - 1]);\n    };\n\n    redirect = id => {\n        const { history } = this.props;\n\n\n\n        history.push(`/main/catalog/category/${id}`);\n        this.getSubcat(id);\n    };\n\n    getCurrentCat = (id) => {\n        const { getCurrentCat } = this.props;\n\n        getCurrentCat(id).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.setState(({prevCatId, prevCatName}) => ({\n                    prevCatId: [...prevCatId, res.payload.data.id],\n                    prevCatName: [...prevCatName, res.payload.data.name],\n                    currentCatName: res.payload.data.name,\n                    parentCatId: res.payload.data.id,\n                    noCategoryExist: false\n                }));\n            } else {\n                console.log(res);\n                this.setState(({prevCatId, prevCatName}) => ({\n                    prevCatId: [],\n                    prevCatName: [],\n                    currentCatName: res.error.response.data.id,\n                    parentCatId: '',\n                    noCategoryExist: true\n                }));\n            }\n        });\n    };\n\n    changePage = (page, customPage) => {\n        const { paginate } = this.props;\n\n        let newPage = customPage ? customPage : page.selected + 1,\n            { parentCatId } = this.state,\n            generalData = [],\n            categories = [],\n            products = [],\n            next = '',\n            prev = '',\n            totalPagesCount = 0,\n            totalItemsCount = 0;\n\n        paginate(newPage, parentCatId).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                generalData = res.payload.data.results;\n                next = res.payload.data.next;\n                prev = res.payload.data.previous;\n                totalPagesCount = res.payload.data.total_pages;\n                totalItemsCount = res.payload.data.count;\n\n                generalData.map((el, index) => {\n                    return el.is_product ? products.push(el) : categories.push(el);\n                });\n\n                this.setState({\n                    items: [categories, products],\n                    activePage: newPage,\n                    totalItemsCount: totalItemsCount,\n                    totalPagesCount: totalPagesCount,\n                    next: next,\n                    prev: prev\n                });\n                this.endLoading();\n            }\n        });\n    };\n\n    endLoading = () => {\n        this.setState({\n            loading: false,\n            nameError: false,\n            priceError: false,\n            nameErrorText: '',\n            priceErrorText: ''\n        });\n    };\n\n    render(){\n        const { openDeleteDialog,\n            openEditDialog,\n            openAddDialog,\n            openAddStockCustomDialog,\n            openAddStockDialog,\n            openAddProductDialog,\n            prevCatName,\n            loading,\n            items,\n            activePage,\n            categoryId,\n            totalPagesCount,\n            totalItemsCount,\n            currentCatName,\n            newItemType,\n            currentItemName,\n            currentItemPrice,\n            nameError,\n            priceError,\n            nameErrorText,\n            priceErrorText,\n            autoSup,\n            quantity,\n            supply_quantity,\n            min_supply_quantity,\n            categoryProducts,\n            newProdName,\n            filteredProds,\n            newStock,\n            quantityError,\n            quantityErrorText,\n            supplyQuantityError,\n            supplyQuantityErrorText,\n            minSupplyQuantityError,\n            minSupplyQuantityErrorText,\n            noCategoryExist\n        } = this.state;\n        const {  history: { location: { pathname } } } = this.props;\n        let lastSlug = pathname.split('/')[pathname.split('/').length - 1];\n\n        console.log(items);\n        return (\n            <div className=\"catalog_page content_block\">\n\n                <div className=\"custom_title_wrapper\">\n                    {pathname !== '/main/catalog'\n                        ?\n                        prevCatName.length > 1 ?\n                            <Fragment>\n                                <Link to=\"#\" onClick={this.moveBackFromSubcategory}><img src={Path} alt=\"Path\"/>{prevCatName[prevCatName.length - 2]}</Link>\n                                <div className=\"title_page\">{prevCatName[prevCatName.length - 1]}</div>\n                            </Fragment>\n                            :\n                            <Fragment>\n                                <Link to=\"/main/catalog\" onClick={this.getCategories}><img src={Path} alt=\"Path\"/>Products and categories</Link>\n                                <div className=\"title_page\">{currentCatName}</div>\n                            </Fragment>\n                        :\n                        <div className=\"title_page\">Products and categories</div>\n                    }\n\n                </div>\n\n                <div className=\"content_page\">\n\n                    {loading\n                        ?\n                        <Loader />\n                        :\n                        <div className={`catalog_table ${pathname === '/main/catalog' ? 'catalog' : ''}`}>\n                            <div className=\"table_panel\">\n                                {noCategoryExist ? null :\n                                    <Fragment>\n                                        {\n                                            pathname === '/main/catalog' ?\n\n                                                <Fragment>\n                                                    {<button onClick={() => this.addNewItem('cat')}>+ add category</button>}\n                                                    {null}\n                                                </Fragment>\n                                                :\n                                                <Fragment>\n                                                    <button onClick={() => this.addNewItem('sub')}>+ add subcategory</button>\n                                                    <button onClick={() => this.addNewItem('prod')}>+ add product</button>\n                                                </Fragment>\n                                        }\n                                    </Fragment>\n                                }\n                            </div>\n                            {(totalItemsCount === 0) && (items[0].length + items[1].length < 1)\n                                ?\n                                <h3 className={'empty_list'}>The list is empty</h3>\n                                :\n                                <div className=\"table_container transactions_columns\">\n                                    <div className=\"table_header\">\n                                        <div className=\"table_row\">\n                                            <div className=\"row_item\">Name</div>\n                                            <div className=\"row_item\">Code</div>\n                                            <div className=\"row_item\">Unit value</div>\n                                            <div className=\"row_item\">Actions</div>\n                                        </div>\n                                    </div>\n                                    <div className=\"table_body\">\n                                        {\n                                            items.map((elem, id) => (\n                                                elem.map((el, index) => (\n                                                    <Card style={{ width: '18rem' }}>\n                                                        <Card.Img variant=\"top\" src=\"holder.js/200x300\"/>\n                                                        <Card.Body>\n                                                            <Card.Title>Card Title</Card.Title>\n                                                            <Card.Text>\n                                                                Some quick example text to build on the card title and make up the bulk of\n                                                                the card's content.\n                                                        </Card.Text>\n                                                            \n                                                        </Card.Body>\n                                                    </Card>\n                                                    /*<div className=\"table_row\" key={index}>\n                                                        <div className=\"row_item\">\n                                                            {el.is_product || el.price ?\n                                                                <div>{el.name}</div>\n                                                                :\n                                                                <Link to='#' onClick={() => this.moveToSubcategory(el.id, el.name)}>{el.name}</Link>\n                                                            }\n                                                        </div>\n                                                        <div className=\"row_item\">{el.code ? '#' + el.code : '-'}</div>\n                                                        <div className=\"row_item\">{el.unit_value || el.price ? 'RWF' + (el.unit_value || el.price) : '-'}</div>\n                                                        <div className=\"row_item \">\n\n                                                            {el.code\n                                                                ?\n                                                                el.name === newProdName || el.is_product ?\n                                                                    <button className=\"green_text\"onClick={() => this.checkStocks(el.id)}>Add to stock</button>\n                                                                    :\n                                                                    '-'\n                                                                :\n                                                                <Fragment>\n                                                                    <button className=\"blue_text\"\n                                                                            onClick={() => this.editItem(`${lastSlug === 'catalog' ? 'cat' : el.unit_value || el.price ? 'prod' : 'sub'}`, el.id, el.name, el.price || el.unit_value ? el.price || el.unit_value : '')}>Edit</button>\n                                                                    < button className=\"red_text\" onClick={() => this.deleteItem(`${lastSlug === 'catalog' ? 'cat' : el.unit_value || el.price ? 'prod' : 'sub'}`, el.id, el.name)}>Delete</button>\n                                                                </Fragment>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    */\n                                                ))\n                                            ))\n                                        }\n                                    </div>\n                                </div>\n                            }\n                            {totalItemsCount < 10 ?\n                                null\n                                :\n                                <div className=\"pagination_info_wrapper\">\n                                    <div className=\"pagination_block\">\n                                        <Pagination\n                                            active={activePage - 1}\n                                            pageCount={totalPagesCount}\n                                            onChange={this.changePage}\n                                        />\n                                    </div>\n                                    <div className=\"info\">Displaying page {activePage} of {totalPagesCount},\n                                        items {activePage * 10 - 9} to {activePage * 10 > totalItemsCount ? totalItemsCount : activePage * 10} of {totalItemsCount}</div>\n                                </div>\n                            }\n                        </div>\n                    }\n                </div>\n\n                <DialogComponent\n                    open={openDeleteDialog}\n                    onClose={() => this.toggleDeleteDialog(this.state.productId, this.state.isProduct, categoryId)}\n                >\n                    <div className=\"delete_dialog\">\n                        <div className=\"title\">\n                            {\n                                newItemType === 'cat'\n                                    ?\n                                    <span>Delete category</span>\n                                    :\n                                    newItemType === 'prod' ?\n                                        <span>Delete product</span>\n                                        :\n                                        newItemType === 'sub' ?\n                                            <span>Delete subcategory</span>\n                                            :\n                                            null\n                            }\n                        </div>\n                        <div className=\"descriptions\">\n                            {\n                                newItemType === 'cat'\n                                    ?\n                                    <span>You are about to delete <span>{currentItemName}</span> from the catalog. All subcategories and products of this category will also be deleted. Are you sure?</span>\n                                    :\n                                    newItemType === 'prod' ?\n                                        <span>You are about to delete <span>{currentItemName}</span> from the catalog. <br/>Are you sure?</span>\n                                        :\n                                        newItemType === 'sub' ?\n                                            <span>You are about to delete <span>{currentItemName}</span> from the catalog. All subcategories and products of this subcategory will also be deleted. Are you sure?</span>\n                                            :\n                                            null\n                            }\n                        </div>\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={this.toggleDeleteDialog}>Cancel</button>\n                            <button className=\"red_btn\" onClick={this.deleteClick}>delete</button>\n                        </div>\n                    </div>\n                </DialogComponent>\n\n                <DialogComponent\n                    open={openAddStockDialog}\n                    onClose={this.toggleStockDialog}\n                >\n                    <div className=\"stock_dialog\">\n                        <div className=\"title\">\n                            <span>Add product</span>\n                        </div>\n                        {newStock ? null :\n                            <div className=\"help_block\">\n                                <span>This product is already in stock, you can edit it below.</span>\n                            </div>\n                        }\n                        <div className=\"stock_wrapper\">\n                            <div className=\"first_block\">\n                                <div className=\"block_field row\">\n                                    <span>Available qty</span>\n                                </div>\n                                <input type=\"number\" onChange={this.newQuantity} value={quantity} placeholder=\"Type here...\"/>\n                                <div className=\"block_field error_block row\">\n                                    <span className={quantityError ? 'visible' : ''}>{quantityErrorText}</span>\n                                </div>\n                            </div>\n                            <div>\n                                <span>Auto supply</span>\n                                <div className=\"supply_btn\">\n                                    <button onClick={this.autoSupOff} className={autoSup ? \"red\" : \"red active\"}><img src={off} alt=\"off\"/></button>\n                                    <button onClick={this.autoSupOn} className={autoSup ? \"green active\" : \"green\"}><img src={on} alt=\"on\"/></button>\n                                </div>\n                            </div>\n                            <div className={autoSup ? \"\" : \"disabled\"}>\n                                <div className=\"block_field row\">\n                                    <span>Min. qty</span>\n                                </div>\n                                <input type=\"number\" onChange={this.newMinSupplyQuantity} value={min_supply_quantity} placeholder=\"Type here...\"/>\n                                <div className=\"block_field error_block row\">\n                                    <span className={minSupplyQuantityError ? 'visible' : ''}>{minSupplyQuantityErrorText}</span>\n                                </div>\n                            </div>\n                            <div className={autoSup ? \"\" : \"disabled\"}>\n                                <div className=\"block_field row\">\n                                    <span>Auto supply qty</span>\n                                </div>\n                                <input type=\"number\" onChange={this.newSupplyQuantity} value={supply_quantity} placeholder=\"Type here...\"/>\n                                <div className=\"block_field error_block row\">\n                                    <span className={supplyQuantityError ? 'visible' : ''}>{supplyQuantityErrorText}</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={this.toggleStockDialog}>Cancel</button>\n                            <button className=\"blue_btn\" onClick={this.addToStock}>add</button>\n                        </div>\n                    </div>\n                </DialogComponent>\n\n                <DialogComponent\n                    open={openAddStockCustomDialog}\n                    onClose={this.toggleStockCustomDialog}\n                >\n                    <div className=\"stock_dialog\">\n                        <div className=\"title\">\n                            <span>Add product</span>\n                        </div>\n                        <div className=\"stock_wrapper\">\n                            <div className=\"first_block\">\n                                <div className=\"block_field row\">\n                                    <span>Available qty</span>\n                                </div>\n                                <input type=\"number\" onChange={this.newQuantity} value={quantity} placeholder=\"Type here...\"/>\n                            </div>\n                            <div>\n                                <div className=\"block_field row\">\n                                    <span>Price</span>\n                                </div>\n                                <input type=\"number\" onChange={this.newProductPrice} value={currentItemPrice} placeholder=\"Type here...\"/>\n                            </div>\n                        </div>\n                        <div className=\"block_field error_block row\">\n                            <span className={priceError ? 'visible' : ''}>{priceErrorText}</span>\n                            <span className={quantityError ? 'visible' : ''}>{quantityErrorText}</span>\n                        </div>\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={this.toggleStockCustomDialog}>Cancel</button>\n                            <button className=\"blue_btn\" onClick={() => this.addClick(true)}>add</button>\n                        </div>\n                    </div>\n                </DialogComponent>\n\n                <DialogComponent\n                    open={openEditDialog}\n                    onClose={() => this.toggleEditDialog(this.state.productId, this.state.isProduct, categoryId)}\n                >\n                    <div className=\"edit_dialog\">\n                        <div className=\"title\">\n                            {\n                                newItemType === 'cat'\n                                    ?\n                                    <span>Edit category</span>\n                                    :\n                                    newItemType === 'prod' ?\n                                        <span>Edit product</span>\n                                        :\n                                        newItemType === 'sub' ?\n                                            <span>Edit subcategory</span>\n                                            :\n                                            null\n                            }\n                        </div>\n                        <div className={`block_edit_field${newItemType === 'prod' ? '' : ' category'}`}>\n                            <div>\n                                <div className=\"block_field row\">\n                                    <span>Name</span>\n                                </div>\n                                <input onChange={this.newCategoryName} value={currentItemName} type=\"text\"/>\n                            </div>\n                            {\n                                newItemType === 'prod' ?\n                                    <div>\n                                        <div className=\"block_field row\">\n                                            <span>Unit value</span>\n                                        </div>\n                                        <input onChange={this.newProductPrice} value={currentItemPrice} type=\"number\"  placeholder=\"Type here...\"/>\n                                        <p>RWF</p>\n                                    </div>\n                                    :\n                                    null\n                            }\n                        </div>\n                        <div className=\"block_field error_block row\">\n                            <span className={priceError ? 'visible' : ''}>{priceErrorText}</span>\n                            <span className={nameError ? 'visible' : ''}>{nameErrorText}</span>\n                        </div>\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={this.toggleEditDialog}>Cancel</button>\n                            <button className=\"blue_btn\" onClick={this.editClick}>Save</button>\n                        </div>\n                    </div>\n                </DialogComponent>\n\n                <DialogComponent\n                    open={openAddDialog}\n                    onClose={() => this.toggleAddDialog(categoryId, true)}\n                >\n                    <div className=\"add_dialog\">\n                        <div className=\"title\">\n                            {\n                                newItemType === 'cat'\n                                    ?\n                                    <span>Add category</span>\n                                    :\n                                    newItemType === 'prod' ?\n                                        <span>Add product</span>\n                                        :\n                                        newItemType === 'sub' ?\n                                            <span>Add subcategory</span>\n                                            :\n                                            null\n                            }\n                        </div>\n                        <div className=\"block_add_field\">\n                            <div>\n                                <div className=\"block_field row\">\n                                    <span>Name</span>\n                                </div>\n                                <input onChange={this.newCategoryName} type=\"text\" placeholder=\"Type here...\"/>\n                            </div>\n                            {\n                                newItemType === 'prod' ?\n                                    <div>\n                                        <div className=\"block_field row\">\n                                            <span>Unit value</span>\n                                        </div>\n                                        <input onChange={this.newProductPrice} type=\"number\"  placeholder=\"Type here...\"/>\n                                        <p>RWF</p>\n                                    </div>\n                                    :\n                                    null\n                            }\n                        </div>\n                        <div className=\"block_field error_block row\">\n                            <span className={priceError ? 'visible' : ''}>{priceErrorText}</span>\n                            <span className={nameError ? 'visible' : ''}>{nameErrorText}</span>\n                        </div>\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={this.toggleAddDialog}>Cancel</button>\n                            <button className=\"blue_btn\" onClick={() => this.addClick(false)}>Add</button>\n                        </div>\n                    </div>\n                </DialogComponent>\n\n                <DialogComponent\n                    open={openAddProductDialog}\n                    onClose={this.toggleAddProductDialog}\n                    onClick={this.clearSearch}\n                >\n                    <div className=\"add_product_dialog\">\n                        <div className=\"title\">\n                            <span>Add product</span>\n                        </div>\n                        <div className=\"descriptions\">\n                            <span>Type a product name and select one of the options <br/>or create a new product.</span>\n                        </div>\n                        <div className=\"block_field row\">\n                            <span></span>\n                        </div>\n                        <div className=\"block_search\">\n                            <input onChange={this.onTypeAction} type=\"text\" placeholder=\"Search…\"/>\n                            {\n                                filteredProds.length > 0 && newProdName.length > 2 ?\n                                    <div className=\"autocomplete\">\n                                        {nameError ? null :\n                                            <button className=\"new\" onClick={this.toggleStockCustomDialog}>{newProdName}<span>+ add new</span></button>\n                                        }\n                                        {\n                                            filteredProds.map((prod, key) =>\n                                                (\n                                                    <button id={prod.id} key={key} onClick={() => this.checkStocks(prod.id)}>{prod.name}</button>\n                                                )\n                                            )\n                                        }\n                                    </div>\n                                    :\n                                    null\n                            }\n                        </div>\n                        <div className=\"block_field error_block row\">\n                            <span className={nameError ? 'visible' : ''}>{nameErrorText}</span>\n                        </div>\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={this.toggleAddProductDialog}>Cancel</button>\n                            <button className=\"blue_btn\" disabled={nameError || (newProdName.length < 3)} onClick={this.toggleStockCustomDialog}>Next</button>\n                        </div>\n                    </div>\n                </DialogComponent>\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return{\n\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        getCat,\n        addCat,\n        getSubcat,\n        addProduct,\n        getCurrentCat,\n        editCat,\n        editProd,\n        deleteProd,\n        deleteCat,\n        paginate,\n        checkStocks,\n        createInventory,\n        patchInventory,\n        getProdsForStocks\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport {\n    getClinicLog,\n    getClinicDashBoard\n} from \"../../actions/dashboardActions\";\nimport arrow_forward from '../../assets/image/arrow_forward copy.svg';\nimport './Dashboard.scss';\n\nclass Dashboard extends Component {\n    state = {\n        loading: true\n    };\n\n    componentDidMount(){\n        const { getClinicLog, getClinicDashBoard } = this.props;\n        getClinicLog().then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                getClinicDashBoard().then(res => {\n                    if(res.payload && res.payload.status && res.payload.status === 200) {\n                        this.setState({ loading: false });\n                    }\n                })\n            }\n        })\n    }\n\n    render(){\n        const { clinicDashBoard, clinicLog } = this.props;\n        const { loading } = this.state;\n        if (loading) return null;\n        return (\n            <div className=\"dashboard_page content_block\">\n                <div className=\"title_page\">Dashboard</div>\n                <div className=\"info_block\">\n                    <div>\n                        <p className=\"descriptions\">total amount</p>\n                        <span><span className={'small_price'}>RWF</span>{clinicDashBoard.total_amount}</span>\n\n                    </div>\n                    <div className=\"center_block\">\n                        <Link to={{pathname:\"/main/stock-management\", state:{tab: 0}}}  className=\"green_text\">\n                            products in stock\n                            <img className=\"arrow\" src={arrow_forward} alt=\"arrow_forward\"/>\n                        </Link>\n                        <div className=\"info\">\n                            <span>{clinicDashBoard.in_stock}</span>\n                        </div>\n                    </div>\n                    <div>\n                        <Link to={{pathname:\"/main/stock-management\", state:{tab: 1}}} className=\"red_text\">\n                            products out of stock\n                            <img className=\"arrow\" src={arrow_forward} alt=\"arrow_forward\"/>\n                        </Link>\n                        <div className=\"info\">\n                            <span>{clinicDashBoard.out_stock}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"dashboard_block\" >\n                    <div className=\"panel_dashboard\">\n                        <span>recent actions</span>\n                        <Link to=\"/main/activity\">view all</Link>\n                    </div>\n                    <div className=\"dashboard_info_wrapper\" >\n                        {clinicLog.length > 0 ?\n                            clinicLog.map(el => (\n                                <div key={el.id}>\n                                    <span>{moment(el.date).format('DD/MM/YYYY HH:mm')}</span>\n                                    {/*<p><span className=\"name_user\">Ivan Simpson</span> added <span className=\"count_prod\">10</span> items of <span className=\"name_prod\">Product1</span></p>*/}\n                                    <div dangerouslySetInnerHTML={{ __html: el.text }} />\n                                </div>\n                            ))\n                            :\n                            <h3>The list is empty.</h3>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        clinicLog: state.dashboard.clinicLog,\n        clinicDashBoard: state.dashboard.clinicDashBoard\n    }\n};\n\nconst mapDispatchToProps = {\n    getClinicLog,\n    getClinicDashBoard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import * as types from './constants.jsx';\n\nexport function getClinicLog() {\n    return {\n        type: types.GET_CLINIC_LOG,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/clinic-logs/?page_size=5`,\n                method: 'get'\n            }\n        }\n    };\n}\n\nexport function getClinicDashBoard() {\n    return {\n        type: types.GET_CLINIC_DASH_BOARD,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/clinic-dashboard/`,\n                method: 'get'\n            }\n        }\n    };\n}","import React from 'react';\nimport Select, {components} from 'react-select';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport './SelectComponent.scss';\n\nconst DropdownIndicator = props => {\n    return (\n        components.DropdownIndicator && (\n            <components.DropdownIndicator {...props}>\n                <div className={props.selectProps.menuIsOpen ? \"select_indicator indicator_active\" : \"select_indicator\"}>\n                    <ExpandMoreIcon />\n                </div>\n            </components.DropdownIndicator>\n        )\n    );\n};\n\nconst SelectComponent = ({value,onKeyDown, options, loading, change, placeholder, isClearable, isSearchable = true}) => (\n      <Select\n          className=\"select_component\"\n          classNamePrefix=\"select\"\n          isDisabled={false}\n          isLoading={loading}\n          isClearable={!isClearable}\n          isSearchable={isSearchable}\n          name=\"color\"\n          value={value}\n          options={options}\n          onChange={change}\n          loadingMessage={()=>'Loading filters...'}\n          placeholder={placeholder}\n          onKeyDown={onKeyDown}\n\n          components={{ DropdownIndicator }}\n      />\n);\n\nexport default SelectComponent;","import React from 'react';\nimport './RenderField.scss';\n\nconst RenderField = ({ onChange, input, placeholder, type, id, meta: { touched, error, warning }, max, min }) => (\n    <label className={touched && error ? input.value !=='' ? 'block-input error_border value' : 'error_border block-input' : input.value !=='' ? 'block-input value' : 'block-input'}>\n        <input onChange={onChange} {...input} onKeyDown={(e) => (e.keyCode === 13 ? e.preventDefault() : false)} placeholder={placeholder} max={max} min={min} id={id} type={type} autoComplete='off'  />\n         <span className=\"error\">{error}</span>\n    </label>\n);\n\n\n\nexport default RenderField;","import * as types from './constants.jsx';\n\n\nexport function patchUser(id, data) {\n    return {\n        type: types.PATCH_USER,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/user-management/${id}/`,\n                method: \"PATCH\",\n                data\n            }\n        }\n    };\n}\nexport function deleteUser(id) {\n    return {\n        type: types.DELETE_USER,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/user-management/${id}/`,\n                method: \"delete\",\n            }\n        }\n    };\n}\n\nexport function postAddUser(data) {\n    return {\n        type: types.POST_ADD_USER,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/add-user/`,\n                method: \"POST\",\n                data\n            }\n        }\n    };\n}\n\nexport function getUsersList() {\n    return {\n        type: types.GET_USERS_LIST,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/user-management-list/`,\n                method: 'get',\n            }\n        }\n    };\n}\n\nexport function resetErrorUsers() {\n    return { type: types.RESET_USER_ERROR };\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport DialogComponent from \"../../HelperComponents/DialogComponent/DialogComponent\";\nimport FormControl from '@material-ui/core/FormControl';\nimport SelectComponent from '../../HelperComponents/SelectComponent/SelectComponent';\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport {patchUser, getUsersList, resetErrorUsers} from \"../../../actions/UserActions\";\n\n\nclass EditDialog extends Component {\n\n        state = {\n            role: [\n                {label:\n                        <div className=\"status\">\n                            <div>Admin</div>\n                        </div>\n                    , value: \"admin\"},\n                {label:\n                        <div className=\"status\">\n                            <div>User</div>\n                        </div>\n                    ,value: \"user\"},\n            ],\n            noErrors: false\n        };\n\n\n    handleChange = name => event => {\n        // const status = { status: event.value }\n        this.setState({ [name]: event });\n    };\n\n    submitForm = (data) => {\n        const { patchUser, getUsersList, toggler, initialValues } = this.props;\n        const { status } = this.state;\n        let obj = { ...data, role: status.value };\n        patchUser(initialValues.id, obj).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                getUsersList();\n                toggler()\n            }\n        })\n    };\n\n    defaultStatus = () => {\n        this.setState({status: null, noErrors: true});\n        this.props.resetErrorUsers();\n    };\n\n    render(){\n        const { role, status } = this.state;\n        const { toggler, state, handleSubmit, fail_err, initialValues, reset } = this.props;\n\n        return (\n            <DialogComponent\n                open={state}\n                onClose={() => {toggler(); this.defaultStatus()}}\n            >\n                    <div className=\"edit_dialog_user\">\n                        <form onSubmit={handleSubmit(this.submitForm)}>\n                        <div className=\"title\">\n                            <span>Edit user</span>\n                        </div>\n                        <div className=\"block_edit_field\">\n                            <span className='span'>Name</span>\n                            <Field\n                                name=\"username\"\n                                type=\"text\"\n                                component={RenderField}\n                                placeholder=\"Type here…\"\n                                className='input'\n                            />\n                        </div>\n\n                        <div className=\"block_edit_field_select\">\n                            <div>\n                                <span>Email</span>\n                                <Field\n                                    name=\"email\"\n                                    type=\"text\"\n                                    component={RenderField}\n                                    placeholder=\"Type here…\"\n                                    className='input'\n                                />\n                                <span className='back_error add'>{!!fail_err && fail_err.email}</span>\n\n                            </div>\n                            <div>\n                                <span>Role</span>\n                                <FormControl className=\"select_wrapper\">\n                                    <SelectComponent\n                                        value={status}\n                                        options={role}\n                                        // loading={!isArray(projects_list)}\n                                        change={this.handleChange('status', )}\n                                        isClearable=\"false\"\n                                        isSearchable = {false}\n                                        onKeyDown={(e) => (e.keyCode === 13 ? e.preventDefault() : false)}\n                                    />\n                                </FormControl>\n                                <span className='back_error role'>{!!fail_err&& fail_err.role}</span>\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={(e) => {e.preventDefault(); toggler(); reset('EditDialog'); this.defaultStatus()}}>Cancel</button>\n                            <button className=\"blue_btn\" disabled={!status}>save</button>\n                        </div>\n                        </form>\n                    </div>\n\n            </DialogComponent>\n\n\n        );\n    }\n}\n\n\nexport const validate = values => {\n    const errors = {};\n    const regExp = new RegExp(/^([A-Za-z '.-]+){1}$/g);\n\n    if (!values.username) {\n        errors.username = 'Required'\n    } else if (!regExp.test(values.username)) {\n        errors.username = 'Invalid name'\n    }\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,5}$/i.test(values.email)) {\n        errors.email = 'Invalid email'\n    }\n\n    return errors\n};\n\nEditDialog = reduxForm({\n    form: 'EditDialog',\n    validate,\n    enableReinitialize: true\n})(EditDialog);\n\nfunction mapStateToProps(state, props) {\n    return{\n        fail_err: state.users.error,\n        // initialValues: {\n        //     email: (props.userData && props.userData.email) || ''\n        // }\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        patchUser,\n        getUsersList,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditDialog);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport DialogComponent from \"../../HelperComponents/DialogComponent/DialogComponent\";\nimport FormControl from '@material-ui/core/FormControl';\nimport SelectComponent from '../../HelperComponents/SelectComponent/SelectComponent';\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport { postAddUser, getUsersList, resetErrorUsers } from \"../../../actions/UserActions\";\nimport { validate } from \"./EditDialog\";\n\n\nclass AddingDialog extends Component {\n    state = {\n        role: [\n            {label:\n                    <div className=\"status\">\n                        <div>Admin</div>\n                    </div>\n                , value: \"admin\"},\n            {label:\n                    <div className=\"status\">\n                        <div>User</div>\n                    </div>\n                ,value: \"user\"},\n        ],\n    };\n\n\n    handleChange = name => event => {\n        // const status = { status: event.value }\n        this.setState({ [name]: event });\n    };\n\n    defaultStatus = () => {\n      this.setState({status: null})\n    };\n\n\n    submitForm = (data, e) => {\n            const { postAddUser, toggler, getUsersList, reset } = this.props;\n            const { status } = this.state;\n            let obj = { ...data, role: status.value };\n            postAddUser(obj).then(res => {\n                if(res.payload && res.payload.status && res.payload.status === 201) {\n                    reset('AddingDialog');\n                    this.setState({status: null});\n                    getUsersList();\n                    toggler()\n                }\n            })\n    };\n\n    render(){\n        const { role, status } = this.state;\n        const { toggler, state, handleSubmit, submitting, pristine, valid, adding_error, reset } = this.props;\n        return (\n            <DialogComponent\n                open={state}\n                onClose={() => {toggler(); this.defaultStatus()}}\n            >\n\n                    <div className=\"edit_dialog_user\">\n                        <form onSubmit={handleSubmit(this.submitForm)}>\n                        <div className=\"title\">\n                            <span>Add user</span>\n                        </div>\n                        <div className=\"block_edit_field\">\n                            <span className='span'>Name</span>\n                            <Field\n                                name=\"username\"\n                                type=\"text\"\n                                component={RenderField}\n                                placeholder=\"Type here…\"\n                                className='input'\n                            />\n                        </div>\n\n                        <div className=\"block_edit_field_select\">\n                            <div>\n                                <span>Email</span>\n                                <Field\n                                    name=\"email\"\n                                    type=\"text\"\n                                    component={RenderField}\n                                    placeholder=\"Type here…\"\n                                    className='input'\n                                />\n                                <span className='back_error add'>{adding_error && adding_error.email}</span>\n                            </div>\n                            <div>\n                                <span>Role</span>\n                                <FormControl className=\"select_wrapper\">\n                                    <SelectComponent\n                                        value={status}\n                                        options={role}\n                                        // loading={!isArray(projects_list)}\n                                        change={this.handleChange('status', )}\n                                        isClearable=\"false\"\n                                        isSearchable = {false}\n                                        onKeyDown={(e) => (e.keyCode === 13 ? e.preventDefault() : false)}\n                                    />\n                                </FormControl>\n                                <span className='back_error role'>{!!adding_error && adding_error.role}</span>\n                            </div>\n\n\n                        </div>\n\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={(e) => {e.preventDefault(); toggler(); reset('AddingDialog'); this.defaultStatus()}}>Cancel</button>\n                            <button disabled={submitting || pristine || !valid || !status} className=\"blue_btn\">add</button>\n                        </div>\n                        </form>\n                    </div>\n\n            </DialogComponent>\n        );\n    }\n}\n\nAddingDialog = reduxForm({\n    form: 'AddingDialog',\n    validate\n})(AddingDialog);\n\nfunction mapStateToProps(state) {\n    return{\n        adding_error: state.users.error,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postAddUser,\n        getUsersList,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddingDialog);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport DialogComponent from \"../../HelperComponents/DialogComponent/DialogComponent\";\nimport { deleteUser, getUsersList } from \"../../../actions/UserActions\";\n\n\n\n\nclass DeleteDialog extends Component {\n    state = {\n        role: [\n            {label:\n                    <div className=\"status\">\n                        <div>Admin</div>\n                    </div>\n                , value: \"admin\"},\n            {label:\n                    <div className=\"status\">\n                        <div>User</div>\n                    </div>\n                ,value: \"user\"},\n        ],\n    };\n\n    submitForm = (data) => {\n        const { deleteUser, username, toggler, getUsersList } = this.props;\n        deleteUser(username.id, data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 204) {\n                getUsersList();\n                toggler()\n            }\n        })\n    };\n\n    render(){\n        const { toggler, state, handleSubmit, username, reset } = this.props;\n        return (\n            <DialogComponent\n                open={state}\n                onClose={toggler}\n            >\n\n                    <div className=\"edit_dialog_user\">\n                        <form onSubmit={handleSubmit(this.submitForm)}>\n                        <div className=\"title\">\n                            <span>Delete user</span>\n                        </div>\n                            <div className=\"descriptions\">\n                                <span>You are about to delete <span className='username' style={{fontFamily: 'MontSemiBold'}}>{!!username && username.username}</span> from the system. <br/>Are you sure?</span>\n                            </div>\n\n\n\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={(e) => {e.preventDefault(); toggler(); reset('DeleteDialog')}}>Cancel</button>\n                            <button className=\"blue_btn\">delete</button>\n                        </div>\n                        </form>\n                    </div>\n\n            </DialogComponent>\n        );\n    }\n}\n\nDeleteDialog = reduxForm({\n    form: 'DeleteDialog',\n    enableReinitialize: true\n})(DeleteDialog);\n\nfunction mapStateToProps(state) {\n    return{\n\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        deleteUser,\n        getUsersList\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteDialog);\n","import React, { Fragment, Component} from 'react';\nimport {connect} from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport EditDialog from \"./Dialogs/EditDialog\";\nimport AddingDialog from \"./Dialogs/AddingDialog\";\nimport DeleteDialog from \"./Dialogs/DeleteDialog\";\nimport { getUsersList, resetErrorUsers } from \"../../actions/UserActions\";\n\nimport './UserManagement.scss';\n\n\nclass UserManagement extends Component {\n    state = {\n        openDeleteDialog: false,\n        openEditDialog: false,\n        openAddDialog: false,\n        loading: true,\n    };\n\n    componentDidMount() {\n        this.doRequest();\n    }\n\n    doRequest = () => {\n        const { getUsersList } = this.props;\n        getUsersList().then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.setState({\n                    loading: false,\n                })\n        }})\n    };\n     ucFirst = (str) => {\n        if (!str) return str;\n\n        return str[0].toUpperCase() + str.slice(1);\n    };\n\n    toggleDeleteDialog = (data) => {\n        this.setState(({openDeleteDialog}) => ({\n            openDeleteDialog: !openDeleteDialog,\n            userData: data,\n        }));\n    };\n\n    toggleAddDialog = (id = null) => {\n        this.setState(({openAddDialog}) => ({\n            openAddDialog: !openAddDialog,\n        }));\n        const {resetErrorUsers} = this.props;\n        resetErrorUsers()\n    };\n\n    toggleEditDialog = (data) => {\n        this.setState(({openEditDialog}) => ({\n            openEditDialog: !openEditDialog,\n            userData: data,\n        }));\n    };\n\n    render(){\n        const { openDeleteDialog, openEditDialog, openAddDialog, loading, userData } = this.state;\n        const { users_list } = this.props;\n        if (loading) return null;\n        return (\n            <div className=\"user_management_page content_block\">\n                <div className=\"title_page\">User management</div>\n                <div className=\"content_page\">\n                        <div className=\"user_management_table\">\n                        <div className=\"table_panel\">\n                            <button onClick={this.toggleAddDialog}>+ add user</button>\n                        </div>\n\n                        <div className=\"table_container transactions_columns\">\n                            <div className=\"table_header\">\n                                <div className=\"table_row\">\n                                    <div className=\"row_item\">Name</div>\n                                    <div className=\"row_item\">Email</div>\n                                    <div className=\"row_item\">Role</div>\n                                    <div className=\"row_item\">Actions</div>\n                                </div>\n                            </div>\n                            <div className=\"table_body\">\n                                { users_list.count  ? <Fragment>\n                                {users_list.results.map( (user, key) => (\n                                    <div className=\"table_row\" key={key} >\n                                        <div className=\"row_item\">{user.username}</div>\n                                        <div className=\"row_item\">{user.email}</div>\n                                        <div className=\"row_item\">{this.ucFirst(user.role)}</div>\n                                        <div className=\"row_item \">\n                                            <button className=\"blue_text\" onClick={() => this.toggleEditDialog(user)}>Edit</button>\n                                            <button className=\"red_text\" onClick={() => this.toggleDeleteDialog(user)}>Delete</button>\n                                        </div>\n                                    </div>\n                                ))}\n                                </Fragment> : <div className='table_row cap'>This list is empty</div>}\n                            </div>\n                        </div>\n\n                        </div>\n                </div>\n\n                <EditDialog initialValues={userData} toggler={this.toggleEditDialog} state={openEditDialog}/>\n                <AddingDialog toggler={this.toggleAddDialog} state={openAddDialog}/>\n                <DeleteDialog username={userData} toggler={this.toggleDeleteDialog} state={openDeleteDialog}/>\n\n            </div>\n        );\n    }\n}\n\nUserManagement = reduxForm({\n    form: 'UserManagement',\n\n})(UserManagement);\n\nfunction mapStateToProps(state) {\n    return{\n        users_list: state.users.users_list,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        getUsersList,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManagement);\n","import * as types from './constants.jsx';\n\n\nexport function getStock(marker, page, quantity) {\n    return {\n        type: types.GET_STOCK,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory/?${quantity ? 'ordering='+quantity+'&' : ''}${page ? 'page=' + page + '&' : ''}stock=${marker}`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n//\n// export function switcher(marker, quantity) {\n//     return {\n//         type: types.SWITCHER,\n//         payload: {\n//             client: 'default',\n//             request: {\n//                 url: `/inventory/?stock=${marker}&ordering=${quantity}`,\n//                 method: \"GET\",\n//             }\n//         }\n//     };\n// }\n\nexport function getSearchList(id) {\n    return {\n        type: types.GET_STOCK,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory/?id__in=${id}`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function searchStock(marker, prod) {\n    return {\n        type: types.SEARCH_STOCK,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/inventory-search/?stock=${marker}${prod && prod.length !== 0 ? `&search=${prod}` : ''}`,\n                method: \"GET\",\n            }\n        }\n    };\n}\n\nexport function patchQuantity(id, data) {\n    return {\n        type: types.PATCH_QUANTITY,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/quantity-update/${id}/`,\n                method: \"PATCH\",\n                data\n            }\n        }\n    };\n}\n\nexport function postRequest(data) {\n    return {\n        type: types.POST_REQUEST,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/requests/`,\n                method: \"POST\",\n                data\n            }\n        }\n    };\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport DialogComponent from \"../../HelperComponents/DialogComponent/DialogComponent\";\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport { patchQuantity, getStock } from \"../../../actions/stockActions\";\n\nclass QuantityDialog extends Component {\n\n    state = {\n    };\n\n\n    submitForm = (data) => {\n        const { patchQuantity, toggler, product_id, sign,reset, activePage,doRequest } = this.props;\n        let obj = {...data};\n        if(sign === '-'){\n            obj.quantity = `-${data.quantity}`;\n        }\n        patchQuantity(product_id, obj).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                reset('QuantityDialog');\n                toggler();\n                doRequest( {selected: activePage});\n            }\n        });\n\n    };\n\n\n    render(){\n        const {\n            toggler,\n            state,\n            product_name,\n            product_quantity,\n            handleSubmit,\n            sign,\n            fail_err,\n            startValue,\n            reset,\n\n        } = this.props;\n        return (\n\n            <DialogComponent\n                open={state}\n                onClose={() => {toggler(); reset('QuantityDialog')}}\n            >\n                <div className=\"quantity_dialog\">\n                    <div className=\"title\">\n                        <span>Change product quantity</span>\n                    </div>\n                    <div className=\"descriptions\">\n                        <span>You are about to change available amount of <span className='name'>{product_name}</span>. <br/>Enter the quantity of the required product to proceed.</span>\n                    </div>\n                    <form onSubmit={handleSubmit(this.submitForm)}>\n                        <div className=\"block_field\">\n                            <span>Quantity</span>\n                            <span className='back_error'>{fail_err && fail_err.quantity}</span>\n                            {sign === '-' ?\n                                <Field\n                                    id='idx'\n                                    name='quantity'\n                                    type=\"number\"\n                                    max={product_quantity}\n                                    component={RenderField}\n                                    placeholder=\"Type here...\"\n                                    value={startValue}\n                                /> :\n                                <Field\n                                    id='idx'\n                                    name='quantity'\n                                    type=\"number\"\n                                    component={RenderField}\n                                    placeholder=\"Type here...\"\n                                    value={startValue}\n                                />\n                            }\n                        </div>\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={(e) => {e.preventDefault(); toggler(); reset('QuantityDialog')}}>Cancel</button>\n                            <button className=\"blue_btn\">{sign === '-' ? 'remove' : 'add'}</button>\n                        </div>\n                    </form>\n                </div>\n            </DialogComponent>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.quantity) {\n        errors.quantity = 'This field is required'\n    }else if(values.quantity && /-/.test(values.quantity)){\n        errors.quantity = 'Ensure this value is greater than or equal to 0'\n    }\n    return errors\n};\n\nQuantityDialog = reduxForm({\n    form: 'QuantityDialog',\n    validate\n})(QuantityDialog);\n\nfunction mapStateToProps(state) {\n    return{\n        fail_err: state.stock.error,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        patchQuantity,\n        getStock\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuantityDialog);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Field, reduxForm} from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport DialogComponent from \"../../HelperComponents/DialogComponent/DialogComponent\";\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport { postRequest } from \"../../../actions/stockActions\";\n\nclass RequestDialog extends Component {\n    state = {\n    };\n\n    submitForm = (data) => {\n        const { product_id, postRequest, toggler,reset } = this.props;\n        data.inventory_id = product_id;\n        postRequest(data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 201) {\n                toggler();\n                reset('RequestDialog');\n            }\n        })\n\n    };\n\n\n\n    render(){\n        const { toggler, state, product_name, handleSubmit, startValue, reset} = this.props;\n\n        return (\n            <DialogComponent\n                open={state}\n                onClose={() => { toggler(); reset('RequestDialog');\n                }}\n            >\n                <div className=\"quantity_dialog\">\n                    <div className=\"title\">\n                        <span>Request supply</span>\n                    </div>\n                    <div className=\"descriptions\">\n                        <span>You are about to send a request for supply of <span className='name'>{product_name}</span>.<br/>Enter the quantity of the required product to proceed.</span>\n                    </div>\n                    <form onSubmit={handleSubmit(this.submitForm)}>\n                        <div className=\"block_field\">\n                            <span>Quantity</span>\n                            <Field\n                                id='ixd'\n                                name=\"quantity\"\n                                type=\"number\"\n                                component={RenderField}\n                                placeholder=\"Type here...\"\n                                value={startValue}\n                            />\n                        </div>\n                        <div className=\"btn_wrapper\">\n                            <button className=\"cancel_btn\" onClick={(e) => {e.preventDefault(); toggler(); reset('RequestDialog')}}>Cancel</button>\n                            <button className=\"green_btn\">send request</button>\n                        </div>\n                    </form>\n                </div>\n            </DialogComponent>\n        );\n    }\n}\n\n\nconst validate = values => {\n    const errors = {};\n    if (!values.quantity) {\n        errors.quantity = 'This field is required'\n    }else if(values.quantity && /-/.test(values.quantity)){\n        errors.quantity = 'Ensure this value is greater than or equal to 0'\n    }\n    return errors\n};\n\nRequestDialog = reduxForm({\n    form: 'RequestDialog',\n    validate\n})(RequestDialog);\n\nfunction mapStateToProps(state) {\n    return{\n\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postRequest,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestDialog);\n","import React, { Fragment, Component} from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport Pagination from '../HelperComponents/Pagination/Pagination';\nimport ok from '../../assets/image/ok.svg';\nimport no from '../../assets/image/no.svg';\nimport minus from '../../assets/image/minus.svg';\nimport plus from '../../assets/image/plus.svg';\nimport roll_down from '../../assets/image/roll_down.svg';\nimport sort_up from '../../assets/image/sort_up.svg';\nimport sort_down from '../../assets/image/sort_down.svg';\nimport './StockManagement.scss';\nimport QuantityDialog from './Dialogs/QuantityDialog';\nimport RequestDialog from './Dialogs/RequestDialog';\nimport { getStock, searchStock, getSearchList } from '../../actions/stockActions';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\n\nclass StockManagement extends Component {\n    state = {\n        loading: true,\n        tab: \"0\",\n        stock: 'in',\n        activePage: 0,\n        totalPages: '',\n        totalItems: '',\n        InfoIsOpen: false,\n        openQuantityDialog:false,\n        openRequestDialog: false,\n        sign: null,\n        product_name: null,\n        product_quantity: null,\n        openSearch: false,\n        optionValue: null,\n        switcherState: 'quantity',\n        someVal: '',\n        newVal: ''\n    };\n\n    componentDidMount() {\n        this.setState({role: localStorage.getItem('role')});\n        if (this.props.location.state){\n            this.setState({\n                tab: this.props.location.state.tab.toString(),\n            });\n            this.props.location.state.tab === 1 && this.setState({ stock: 'out' });\n        }\n\n        this.timer = this.timeout = setTimeout(() => {\n            this.doRequest();\n        }, 0);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timeout);\n    }\n\n    doRequest = (page) => {\n        const { getStock } = this.props;\n        const { stock, switcherState } = this.state;\n        getStock(stock, page !== undefined ? page.selected + 1 : false, switcherState).then(res => {\n            if (res.payload && res.payload.status && res.payload.status === 200) {\n                if (page !== undefined) {\n                    this.setState({\n                        loading: false,\n                        activePage: page.selected,\n                        totalPages: res.payload.data.total_pages,\n                        totalItems: res.payload.data.count\n                    })\n                } else {\n                    this.setState({\n                        loading: false,\n                        totalPages: res.payload.data.total_pages,\n                        totalItems: res.payload.data.count,\n                        activePage: (page ? page : 0),\n                    })\n                }\n            }\n        })\n    };\n\n    handleSwitch = () => {\n        if(this.state.switcherState === 'quantity'){\n            this.setState({\n                switcherState: '-quantity',\n            })\n\n        }else {\n            this.setState({\n                switcherState: 'quantity',\n            });\n        }\n        this.timer = this.timeout = setTimeout(() => {\n            this.doRequest();\n        }, 0);\n    };\n\n    toggleQuantityDialog = (sign, name, quantity, id) => {\n        this.setState(({openQuantityDialog}) => ({\n            openQuantityDialog: !openQuantityDialog,\n            sign: typeof(sign) === 'string' ? sign : '',\n            product_name: name,\n            product_quantity: quantity,\n            product_id: id,\n            InfoIsOpen: false,\n        }));\n    };\n    toggleRequestDialog = (name, quantity, id) => {\n        this.setState(({openRequestDialog}) => ({\n            openRequestDialog: !openRequestDialog,\n            product_name: typeof(name) === 'string' ? name : '',\n            product_quantity: quantity,\n            product_id: id,\n            InfoIsOpen: false,\n        }));\n    };\n\n    changeTab = (tab, stock) => {\n        const { getStock } = this.props;\n        this.setState({ tab, stock });\n        getStock(stock).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200){\n                this.setState({\n                    loading: false,\n                    activePage: 0,\n                    totalPages: res.payload.data.total_pages,\n                    totalItems: res.payload.data.count\n                });\n                this.pagFunc();\n            }\n        })\n    };\n\n    openMenu = (id) => {\n        this.setState(({InfoIsOpen}) => ({\n            InfoIsOpen: true,\n            product_id: id,\n        }))\n    };\n\n    closeMenu = (id) => {\n        this.setState(({InfoIsOpen}) => ({\n            InfoIsOpen: false,\n            product_id: '',\n        }))\n    };\n\n    toggleSearch = () => {\n        this.setState(({openSearch}) => ({\n            openSearch: !openSearch\n        }));\n    };\n\n    togglePopper = () => {\n        this.setState({openSearch: true, activePage: 0 });\n    };\n\n    handleToggleSearch = () => {\n        this.setState({\n            openSearch: false\n        })\n    };\n\n    searchOnChange = (e) => {\n        let regEx = /[^a-zA-Zа-яА-Я0-9]/g;\n\n        this.setState({\n            someVal: e.target.value.replace(regEx, ''),\n            newVal: e.target.value.replace(regEx, '')\n        })\n    };\n\n\n    handleSearchChange = (e) => {\n        const { searchStock, search_list, getSearchList } = this.props;\n        const { stock } = this.state;\n        let inputValue = e.target.value.replace('#', '');\n\n\n\n        if(inputValue.length >= 3){\n            searchStock(stock, inputValue).then(res => {\n                if(res.payload && res.payload.status && res.payload.status === 200){\n                    this.togglePopper();\n                }\n            })\n        }else if(inputValue.length < 3){\n            this.setState({openSearch: false});\n            if (inputValue.length === 0) {\n\n                this.doRequest();\n            }\n        }\n\n        if(e.keyCode === 13 && inputValue.length > 2) {\n            let el_id = search_list.map(el => el.id);\n            getSearchList(el_id.join(',')).then(res => {\n                if(res.payload && res.payload.status && res.payload.status === 200){\n                    this.setState({\n                        totalPages: res.payload.data.total_pages,\n                        totalItems: res.payload.data.count});\n                    this.handleToggleSearch();\n                }\n            })\n        }else if(e.keyCode === 13 && inputValue.length < 2){\n            return null\n        }\n\n    };\n    handleSearchClick = (id) => {\n        const { getSearchList } = this.props;\n        getSearchList(id).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200){\n                this.setState({\n                    totalPages: res.payload.data.total_pages,\n                    totalItems: res.payload.data.count});\n                this.handleToggleSearch();\n            }\n        })\n    };\n\n    pagFunc = (page) => {\n        this.doRequest(page)\n    };\n\n\n    render(){\n\n        const {\n            tab,\n            activePage,\n            InfoIsOpen,\n            openQuantityDialog,\n            openRequestDialog,\n            loading,\n            sign,\n            product_name,\n            product_quantity,\n            product_id,\n            openSearch,\n            totalPages,\n            totalItems,\n            role,\n            stock,\n            newVal\n        } = this.state;\n        const {stock_list, search_list} = this.props;\n        if(loading) return null;\n        return (\n            <div className=\"stock_management_page content_block\">\n                <div className=\"title_page\">Stock management</div>\n\n                <div className=\"content_page\">\n                    <div className=\"tab_block\">\n                        <button\n                            className={tab === \"0\" ? \"active\" : \"\"}\n                            onClick={() => this.changeTab(\"0\", \"in\")}\n                        >\n                            in stock\n                        </button>\n                        <button\n                            className={tab === \"1\" ? \"active\" : \"\"}\n                            onClick={() => this.changeTab(\"1\", \"out\")}\n                        >\n                            out of stock\n                        </button>\n                    </div>\n                    {totalItems > 0 ? <Fragment>\n\n                        <ClickAwayListener onClickAway={this.handleToggleSearch}>\n                            <div className=\"block_search\">\n                                <input\n                                    onKeyUp={(e) => this.handleSearchChange(e)}\n                                    onChange={this.searchOnChange}\n                                    value={newVal}\n                                    type=\"text\"\n                                    placeholder=\"Search…\"\n                                />\n                                {openSearch ?\n                                    <div className=\"autocomplete\">\n                                        {!!search_list && search_list[0] ?\n                                            search_list.map((el, idx) => (\n                                                <button onClick={() => this.handleSearchClick(el.id)} className='search_item' key={idx}>{el.product_name}</button>\n                                            )) : <button disabled>No items</button> }\n                                    </div>\n                                    : null}\n                            </div>\n                        </ClickAwayListener>\n\n\n                        {tab === \"0\" &&\n                        <div className=\"in_stock_wrapper\">\n                            <div className=\"in_stock_table\">\n                                <div className=\"table_container transactions_columns\">\n                                    <div className=\"table_header\">\n                                        <div className=\"table_row\">\n                                            <div className=\"row\">\n                                                <div className=\"row_item\">Name</div>\n                                                <div className=\"row_item\">Code</div>\n                                                <div className=\"row_item\">\n                                                    <button onClick={this.handleSwitch} className=\"btn_sort\">\n                                                        Quantity\n                                                        <div className=\"sort\">\n                                                            <img src={sort_up} alt=\"sort_up\"/>\n                                                            <img src={sort_down} alt=\"sort_down\"/>\n                                                        </div>\n                                                    </button>\n                                                </div>\n                                                <div className=\"row_item\">Unit value</div>\n                                                <div className=\"row_item\">Total value</div>\n                                                <div className=\"row_item\">Actions</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"table_body\">\n                                        {stock_list.results.map((row, idx) => (\n                                            <div className=\"table_row\" key={idx}>\n                                                <div className=\"row\">\n                                                    <div className=\"row_item\">{row.product_name}</div>\n                                                    {row.code ?\n                                                        <div className=\"row_item\">#{row.code}</div> :\n                                                        <div className=\"row_item\">-</div>}\n                                                    <div className=\"row_item\">\n                                                        <button disabled={row.quantity <= 0}\n                                                                onClick={() => this.toggleQuantityDialog('-', row.product_name, row.quantity, row.id)}>\n                                                            <img src={minus} alt=\"minus\"/>\n                                                        </button>\n                                                        <div>{row.quantity}</div>\n                                                        <button onClick={() => this.toggleQuantityDialog('+', row.product_name, row.quantity, row.id)}>\n                                                            <img src={plus} alt=\"plus\"/>\n                                                        </button>\n                                                    </div>\n                                                    <div className=\"row_item\">RWF{row.price}</div>\n\n                                                    <div className=\"row_item\">RWF{row.total_price}</div>\n                                                    <div className=\"row_item\">\n                                                        {row.deleted && row.code ? <div className=\"btn_text\">Not available</div> :\n                                                            row.code ?\n                                                                <div className=\"row_item\">\n                                                                    <button className={role !== \"user\" ? \"green_text btn_text\" : \"hided\"} disabled={role === 'user'} onClick={() => this.toggleRequestDialog(row.product_name, row.quantity, row.id)}>\n                                                                        REQUEST SUPPLY\n                                                                    </button>\n                                                                </div>\n                                                                :  <div className=\"row_item\">-</div>}\n                                                        <button\n                                                            className={InfoIsOpen && product_id === row.id ? \"btn_arrow_open btn_arrow\" : \"btn_arrow\"}\n                                                            onClick={() => product_id === row.id ? this.closeMenu(row.id) : this.openMenu(row.id)}><img src={roll_down} alt=\"roll_down\"/>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                                <div className={InfoIsOpen && product_id === row.id ? \"info info_open\" : \"info\"}>\n                                                    <div className=\"row_item\">\n                                                        <span>Category</span>\n                                                        {role !== 'user' ? <Link className={role !== \"user\" ? \"\" : \"hided\"} to={`/main/catalog/category/${row.product_subcategory[0][row.product_subcategory[0].length-1].id}`}>{row.product_subcategory[1]}</Link>\n                                                            : <a className='hided'>{row.product_subcategory[1]}</a> }\n                                                    </div>\n                                                    <div className=\"row_item\">\n                                                        <span>Auto supply</span>\n                                                        {row.auto_supply ?\n                                                            <img src={ok} alt=\"ok\"/> :\n                                                            <img src={no} alt=\"no\"/>\n                                                        }\n                                                    </div>\n                                                    <div className=\"row_item\">\n                                                        <span>Min. qty</span>\n                                                        {row.deleted ? '-' : row.min_supply_quantity}\n                                                    </div>\n                                                    <div className=\"row_item\">\n                                                        <span>Auto supply qty</span>\n                                                        {row.deleted ? '-' : row.supply_quantity}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                                {totalItems < 10 ? null :\n                                    <div className=\"pagination_info_wrapper\">\n                                        <div className=\"pagination_block\">\n                                            <Pagination\n                                                active={activePage}\n                                                pageCount={+totalPages}\n                                                onChange={this.pagFunc}\n                                            />\n                                        </div>\n                                        <div className=\"info\">Displaying page {activePage+1} of {totalPages},\n                                            items {(activePage + 1) * 10 - 9} to {(activePage + 1) * 10 > totalItems ? totalItems : (activePage + 1) * 10} of {totalItems}</div>\n                                    </div>\n                                }\n                            </div>\n\n                        </div>\n                        }\n                        {tab === \"1\" &&\n                        <div className=\"out_of_stock_table\">\n                            <div className=\"table_container transactions_columns\">\n                                <div className=\"table_header\">\n                                    <div className=\"table_row\">\n                                        <div className=\"row_item\">Name</div>\n                                        <div className=\"row_item\">Category</div>\n                                        <div className=\"row_item\">Code</div>\n                                        <div className=\"row_item\">\n                                            <button className=\"btn_sort stub\">\n                                                Quantity\n                                                <div className=\"sort\">\n                                                    {/*<img src={sort_up} alt=\"sort_up\"/>*/}\n                                                    {/*<img src={sort_down} alt=\"sort_down\"/>*/}\n                                                </div>\n                                            </button>\n                                        </div>\n                                        <div className=\"row_item\">Unit value</div>\n                                        <div className=\"row_item\">Actions</div>\n                                    </div>\n                                </div>\n                                <div className=\"table_body\">\n                                    {stock_list.results.map((row, idx) => (\n                                        <div className=\"table_row\" key={idx}>\n                                            <div className=\"row_item\">{row.product_name}</div>\n                                            <div className=\"row_item\">\n                                                {role !== 'user' ? <Link className={role !== \"user\" ? \"\" : \"hided\"} to={`/main/catalog/category/${row.product_subcategory[0][row.product_subcategory[0].length-1].id}`}>{row.product_subcategory[1]}</Link>\n                                                    : <a className='hided'>{row.product_subcategory[1]}</a> }\n                                            </div>\n                                            {row.code ?\n                                                <div className=\"row_item\">#{row.code}</div> :\n                                                <div className=\"row_item\">-</div>}\n                                            <div className=\"row_item\">\n                                                <button disabled={row.quantity <= 0} onClick={() => this.toggleQuantityDialog('-', row.product_name, row.quantity, row.id)}>\n                                                    <img style={{opacity:'.4'}} src={minus} alt=\"minus\"/>\n                                                </button>\n                                                <div>{row.quantity}</div>\n                                                <button onClick={() => this.toggleQuantityDialog('+', row.product_name, row.quantity, row.id, row.id)}>\n                                                    <img src={plus} alt=\"plus\"/>\n                                                </button>\n                                            </div>\n                                            <div className=\"row_item\">RWF{row.price}</div>\n                                            {row.code ?\n                                                <div className=\"row_item\">\n                                                    <button className={role !== \"user\" ? \"green_text btn_text\" : \"hided\"} disabled={role === 'user'} onClick={() => this.toggleRequestDialog(row.product_name, row.quantity, row.id)}>\n                                                        Request supply\n                                                    </button>\n                                                </div>\n                                                :  <div className=\"row_item\">-</div>}\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                            {totalItems < 10 ? null :\n                                <div className=\"pagination_info_wrapper\">\n                                    <div className=\"pagination_block\">\n                                        <Pagination\n                                            active={activePage}\n                                            pageCount={+totalPages}\n                                            onChange={this.doRequest}\n                                        />\n                                    </div>\n                                    <div className=\"info\">Displaying page {activePage+1} of {totalPages},\n                                        items {(activePage + 1) * 10 - 9} to {(activePage + 1) * 10 > totalItems ? totalItems : (activePage + 1) * 10} of {totalItems}</div>\n                                </div>\n                            }\n                        </div>\n                        }\n                    </Fragment>: <h3 className={'empty_list'}>The list is empty</h3>}\n                </div>\n\n                <QuantityDialog toggler={this.toggleQuantityDialog}\n                                product_quantity={product_quantity}\n                                product_name={product_name}\n                                sign={sign}\n                                state={openQuantityDialog}\n                                product_id={product_id}\n                                startValue={''}\n                                activePage={activePage}\n                                doRequest={this.doRequest}\n                />\n                <RequestDialog toggler={this.toggleRequestDialog}\n                               product_quantity={product_quantity}\n                               product_name={product_name}\n                               state={openRequestDialog}\n                               product_id={product_id}\n                               startValue={''}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return{\n        stock_list: state.stock.stock_list,\n        search_list: state.stock.search_list,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        getStock,\n        searchStock,\n        getSearchList,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StockManagement);\n","import * as types from './constants.jsx';\n\nexport function getActivity(activity, page) {\n    return {\n        type: types.GET_ACTIVITY,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/clinic-logs/?page=${page}&page_size=10${activity ? `&activity=${activity}` : ''}`,\n                method: 'get'\n            }\n        }\n    };\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport Pagination from '../HelperComponents/Pagination/Pagination';\nimport FormControl from '@material-ui/core/FormControl';\nimport SelectComponent from '../HelperComponents/SelectComponent/SelectComponent';\nimport {getActivity} from \"../../actions/activityActions\";\nimport './Activity.scss';\n\n\nclass Activity extends Component {\n\n    state = {\n        activePage: 1,\n        loading: true,\n        activity:\n            {label:\n                <div className=\"status\">\n                    <div>All activities</div>\n                </div>\n                , value: \"\"\n            },\n        activities_list: [\n            {label:\n                <div className=\"status\">\n                    <div>All activities</div>\n                </div>\n                , value: \"\"\n            },\n            {label:\n                <div className=\"status\">\n                    <div>Auto supply request</div>\n                </div>\n                ,value: \"auto_supply_requests\"},\n            {label:\n                <div className=\"status\">\n                    <div>Manual supply request</div>\n                </div>\n                ,value: \"supply_requests\"},\n            {label:\n                <div className=\"status\">\n                    <div>Product addition</div>\n                </div>\n                , value: \"add_products\"},\n            {label:\n                <div className=\"status\">\n                    <div>Product removal</div>\n                </div>\n                , value: \"remove_products\"},\n        ],\n    };\n\n    componentDidMount(){\n        this.doRequest();\n    }\n\n    componentWillUnmount(){\n        clearTimeout(this.timeout);\n    }\n\n    doRequest = (page = 1) => {\n        const {  getActivity } = this.props;\n        const {  activity } = this.state;\n        getActivity(activity.value, page).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.setState({ loading: false });\n            }\n        })\n    };\n\n    changePage = (page) => {\n        this.setState({ activePage: page.selected + 1});\n        this.doRequest(page.selected + 1);\n    };\n\n    handleChange = name => event => {\n        // const status = { status: event.value }\n        this.setState({ [name]: event });\n        this.timer = this.timeout = setTimeout(() => {\n            this.doRequest();\n        }, 0);\n    };\n\n    render(){\n\n        const {activePage, activities_list, activity, loading } = this.state;\n        const { activityLog } = this.props;\n        if (loading) return null;\n        return (\n            <div className=\"activity_page content_block\">\n                <div className=\"title_page\">Activity</div>\n                <div className=\"activity_block\">\n                    <div className=\"panel_activity\">\n                        <FormControl className=\"select_wrapper\">\n                            <SelectComponent\n                                value={activity}\n                                options={activities_list}\n                                // loading={!isArray(projects_list)}\n                                change={this.handleChange('activity', )}\n                                isClearable=\"false\"\n                                isSearchable = {false}\n                            />\n                        </FormControl>\n                    </div>\n                    <div className=\"activity_info_wrapper\">\n                        {activityLog.results && activityLog.results.length > 0 ?\n                            activityLog.results.map(el => (\n                                <div  key={el.id}>\n                                    <div>\n                                        <span>{moment(el.date).format('DD/MM/YYYY HH:mm')}</span>\n                                        {/*<p><span className=\"name_user\">Ivan Simpson</span> added <span className=\"count_prod\">10</span> items of <span className=\"name_prod\">Product1</span></p>*/}\n                                        <div dangerouslySetInnerHTML={{ __html: el.text }} />\n                                    </div>\n\n                                </div>\n                            ))\n                            :\n                            <h3>The list is empty.</h3>\n                        }\n\n                    </div>\n                    {activityLog.count > 10 &&\n                    <div className=\"pagination_info_wrapper\">\n                        <div className=\"pagination_block\">\n\n                            <Pagination\n                                current={activePage}\n                                pageCount={activityLog.total_pages}\n                                onChange={this.changePage}\n                            />\n\n                        </div>\n                        <div className=\"info\">Displaying page {activePage} of {activityLog.total_pages},\n                            items {activePage * 10 - 9} to {activePage * 10 > activityLog.count ? activityLog.count : activePage * 10} of {activityLog.count}</div>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return{\n        activityLog: state.activity.activityLog,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        getActivity\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Activity);\n","import React, { Component, Fragment } from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Head from '../../components/Head/Head';\nimport Panel from '../../components/Panel/Panel';\nimport Catalog from '../../components/Catalog/Catalog';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport UserManagement from '../../components/UserManagement/UserManagement';\nimport StockManagement from '../../components/StockManagement/StockManagement';\nimport Activity from '../../components/Activity/Activity';\n\n\n\nclass Container extends Component {\n    render() {\n        const { match, history } = this.props;\n        const role = localStorage.role;\n        if (!localStorage.token) return <Redirect to=\"/auth\" />;\n        return (\n            <Fragment>\n                <Head history={history} match={match} />\n                <div className=\"page\">\n                    <Panel location={history.location}/>\n                    <Switch>\n                        <Route\n                            path={`${match.url}/dashboard`}\n                            render={() => role !== 'user' ? <Dashboard /> : <Redirect to=\"/main/stock-management\"/>}\n                        />\n                        <Route\n                            path={`${match.url}/activity`}\n                            exact\n                            render={() => role !== 'user' ? <Activity /> : <Redirect to=\"/main/stock-management\"/>}\n                        />\n                        <Route\n                            path={`${match.url}/catalog`}\n                            exact\n                            render={() => role !== 'user' ? <Catalog history={history} catalog={true} /> : <Redirect to=\"/main/stock-management\"/>}\n                        />\n                        <Route\n                            path={`${match.url}/catalog/category/:id`}\n                            render={() => role !== 'user' ? <Catalog history={history} catalog={false}/> : <Redirect to=\"/main/stock-management\" />}\n                        />\n                        <Route\n                            path={`${match.url}/user-management`}\n                            exact\n                            render={() => role === 'clinic' ? <UserManagement /> : <Redirect to=\"/main/stock-management\"/>}\n                        />\n                        <Route path={`${match.url}/stock-management`} component={StockManagement} />\n                        <Route render={()=>(<p>Not found</p>)} />\n                    </Switch>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        // user: state.user\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        // getUser,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './DefaultButton.scss';\n\nconst DefaultButton = ({children, variant = 'contained', type = 'button', to, formAction, disabled, onClick, loading, classes = ''}) => {\n    if(type === 'link') {\n        return (\n            <div className=\"default_button_wrapper\">\n                <Button\n                    component={Link}\n                    to={to}\n                    disabled={disabled}\n                    variant={variant}\n                    classes={{\n                        root: `default_button default_button_${variant} ${classes}`\n                    }}\n                >\n                    {children}\n                </Button>\n            </div>\n        );\n    } else  {\n        return (\n            <div className=\"default_button_wrapper\">\n                <Button\n                    type={formAction ? 'submit' : 'button'}\n                    variant={variant}\n                    disabled={disabled}\n                    onClick={onClick}\n                    classes={{\n                        root: `default_button default_button_${variant} ${classes}`\n                    }}\n                >\n                    {loading\n                        ? <CircularProgress size={24} />\n                        : children\n                    }\n                </Button>\n            </div>\n        );\n    }\n\n};\n\nexport default DefaultButton;","import * as types from './constants.jsx';\n\nexport function postRegisterFirstStep(data) {\n    return {\n        type: types.REGISTER_FIRST_STEP,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/hospital-credential/`,\n                method: \"post\",\n                data\n            }\n        }\n    };\n}\nexport function postRegisterSecondStep(data) {\n    return {\n        type: types.REGISTER_SECOND_STEP,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/owner/`,\n                method: \"post\",\n                data\n            }\n        }\n    };\n}\n\nexport function postLogin(data) {\n    return {\n        type: types.LOGIN,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/login/`,\n                method: \"post\",\n                data\n            }\n        }\n    };\n}\n\nexport function postResetPassword(data) {\n    return {\n        type: types.RESET_PASSWORD,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/reset-password/`,\n                method: \"post\",\n                data\n            }\n        }\n    };\n}\n\nexport function postPasswordApprove(data) {\n    return {\n        type: types.CHANGE_PASSWORD,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/reset-password/approve/`,\n                method: \"post\",\n                data\n            }\n        }\n    };\n}\nexport function sendMessage(data,id) {\n    return {\n        type: types.SEND_MESSAGE,\n        payload: {\n            client: 'default',\n            request: {\n                url: `/auth/message/${id}/`,\n                method: \"PUT\",\n                data\n            }\n        }\n    };\n}\n","import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { bindActionCreators } from 'redux';\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport DefaultButton from '../../Buttons/DefaultButton/DefaultButton';\nimport { Link } from 'react-router-dom';\nimport { postLogin } from '../../../actions/authActions';\nimport { resetErrorUsers } from '../../../actions/UserActions';\n\n\n\nconst SITE_KEY = \"6LfWmNQUAAAAAHjBqN29AftN2ntLZ5858Yi6M085\";\n\nconst recaptchaRef = React.createRef();\n\nclass Login extends Component {\n\n    state = {\n        reCaptcha: false,\n        loading: false,\n    };\n\n    submitForm = (data) => {\n        const { postLogin, history, resetErrorUsers } = this.props;\n        // const recaptchaValue = recaptchaRef.current.getValue();\n        this.setState({loading: true});\n        data.site = \"user\";\n        data.recaptcha = this.state.recaptchaKey;\n        postLogin(data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                localStorage.token = res.payload.data.token;\n                localStorage.email = res.payload.data.email;\n                localStorage.username = res.payload.data.username;\n                localStorage.role = res.payload.data.role;\n                resetErrorUsers();\n                history.push(`/main/dashboard/`)\n            } else {\n                this.setState({ loading: false, reCaptcha: false });\n                recaptchaRef.current.reset();\n            }\n        })\n    };\n\n    onChange= (key) =>{\n        this.setState({\n            reCaptcha: true,\n            recaptchaKey: key\n        })\n    };\n\n    render(){\n        const {handleSubmit, submitting, pristine, valid, error_login, resetErrorUsers } = this.props;\n        const { reCaptcha, loading } = this.state;\n        return (\n            <form onSubmit={handleSubmit(this.submitForm)}>\n                <h3 className=\"auth-block_head\">Sign in to VIEBEG</h3>\n                <h3 className=\"auth-block_descriptions\">Provide your credentials below</h3>\n                <div className=\"block_field\">\n                    <span>Email</span>\n                    <Field name=\"email\"\n                           type=\"text\"\n                           component={RenderField}\n                           placeholder=\"Type here…\"\n                    />\n                    <span className='back_error'>{!!error_login && error_login.email}</span>\n                </div>\n                <div className=\"block_custom_field\">\n                    <div className=\"block_field\">\n                        <div className=\"password_reset\">\n                            <span>Password</span>\n                            <Link to={`/auth/password-recovery/first-step`}>Forgot password?</Link>\n                        </div>\n                        <Field name=\"password\"\n                               type=\"password\"\n                               component={RenderField}\n                               placeholder=\"Type here…\"\n                               onChange={(e) => (error_login ? resetErrorUsers() : e)}\n                        />\n                        <span className='back_error'>{!!error_login && error_login.password}</span>\n                    </div>\n                    <div className=\"captcha_block\">\n                        <ReCAPTCHA\n                            theme=\"light\"\n                            ref={recaptchaRef}\n                            sitekey={SITE_KEY}\n                            onChange={this.onChange}\n                        />\n                        <span className='back_error'>{!!error_login && error_login.recaptcha}</span>\n                    </div>\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        disabled={reCaptcha ? submitting || pristine || !valid : true}\n                        loading={loading}\n                        formAction\n                        type=\"submit\"\n                    >\n                        Sign in\n                    </DefaultButton>\n                </div>\n                <div className=\"info_auth\">\n                    <span>Don’t have a VIEBEG account yet?</span>\n                    <Link to={`/auth/sign-up`}>\n                        SIGN UP\n                    </Link>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.company) {\n        errors.company = 'Required'\n    } else if (values.company.length < 3) {\n        errors.company = 'Must be 3 characters or more'\n    }\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,5}$/i.test(values.email)) {\n        errors.email = 'Invalid email'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    }\n    if (!values.phone) {\n        errors.phone = 'Required'\n    }\n    if (!values.address) {\n        errors.address = 'Required'\n    }\n    return errors\n};\n\nLogin = reduxForm({\n    form: 'LoginForm',\n    validate\n})(Login);\n\nfunction  mapStateToProps(state, props) {\n    return{\n        error_login: state.auth.error,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postLogin,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { bindActionCreators } from 'redux';\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport DefaultButton from '../../Buttons/DefaultButton/DefaultButton';\nimport { Link } from 'react-router-dom';\nimport { postRegisterFirstStep } from '../../../actions/authActions';\nimport { resetErrorUsers } from '../../../actions/UserActions';\n// import recaptcha from \"react-google-recaptcha/src/recaptcha\";\n\n\n\n\nconst SITE_KEY = \"6LfWmNQUAAAAAHjBqN29AftN2ntLZ5858Yi6M085\";\nconst recaptchaRef = React.createRef();\n\nclass SignUp extends Component {\n\n    state = {\n        reCaptcha: false,\n        loading: false,\n    };\n\n    componentDidMount() {\n            const {resetErrorUsers} = this.props;\n            // resetErrorUsers()\n    }\n\n    submitForm = (data) => {\n        // const recaptchaValue = recaptchaRef.current.getValue();\n        const { postRegisterFirstStep, history, resetErrorUsers } = this.props;\n        this.setState({loading: true});\n\n        data.recaptcha = this.state.recaptchaKey;\n\n        postRegisterFirstStep(data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                localStorage.setItem( 'clinic_info', JSON.stringify(data));\n                history.push(`/auth/sign-up/second-step`);\n                resetErrorUsers()\n            }else{\n                this.setState({loading: false,  reCaptcha: false});\n                recaptchaRef.current.reset();\n            }\n        })\n    };\n\n    onChange= (key) =>{\n        this.setState({\n            reCaptcha: true,\n            recaptchaKey: key\n        })\n    };\n\n\n    render(){\n        const {handleSubmit, submitting, pristine, valid, step_fail, resetErrorUsers } = this.props;\n        const { reCaptcha, loading } = this.state;\n        console.log(step_fail)\n        return (\n\n            <form onSubmit={handleSubmit(this.submitForm)}>\n                <h3 className=\"auth-block_head\">Sign up to VIEBEG</h3>\n                <h3 className=\"auth-block_descriptions\">Please, fill out the form about your business below</h3>\n                <div className=\"block_field\">\n                    <span>Email</span>\n                    <Field name=\"clinic_email\" type=\"text\" component={RenderField} placeholder=\"Type here…\"/>\n                    <span className='back_error'>{!!step_fail && step_fail.clinic_email}</span>\n                </div>\n                <div className=\"block_custom_field\">\n                    <div className=\"block_field\">\n                        <span>Hospital name</span>\n                        <Field name=\"clinic_name\" type=\"text\" component={RenderField} placeholder=\"Type here…\"/>\n                        <span className='back_error'>{!!step_fail && step_fail.clinic_name}</span>\n                    </div>\n                   <div className=\"captcha_block\">\n                       <ReCAPTCHA\n                           theme=\"light\"\n                           ref={recaptchaRef}\n                           sitekey={SITE_KEY}\n                           onChange={this.onChange}\n                       />\n                       <span className='back_error'>{!!step_fail && step_fail.recaptcha}</span>\n                   </div>\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        disabled={reCaptcha ? submitting || pristine || !valid : true}\n                        loading={loading}\n                        formAction\n                        type=\"submit\"\n                    >\n                        Next\n                    </DefaultButton>\n                </div>\n                <div className=\"info_auth\">\n                    <span>Already a VIEBEG member?</span>\n                    <Link to={`/auth/sign-in`} onClick={resetErrorUsers}>\n                        SIGN IN\n                    </Link>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.company) {\n        errors.company = 'Required'\n    } else if (values.company.length < 3) {\n        errors.company = 'Must be 3 characters or more'\n    }\n    if (!values.clinic_email) {\n        errors.clinic_email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,5}$/i.test(values.clinic_email)) {\n        errors.clinic_email = 'Invalid email'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    }\n    if (!values.phone) {\n        errors.phone = 'Required'\n    }\n    if (!values.address) {\n        errors.address = 'Required'\n    }\n    return errors\n};\n\nSignUp = reduxForm({\n    form: 'SignUp',\n    validate\n})(SignUp);\n\nfunction  mapStateToProps(state, props) {\n    return{\n        step_fail: state.auth.error,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postRegisterFirstStep,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport RenderField from \"../../HelperComponents/RenderField/RenderField\";\nimport DefaultButton from '../../Buttons/DefaultButton/DefaultButton';\nimport { Link } from 'react-router-dom';\nimport arrow from '../../../assets/image/Path.svg';\nimport { postRegisterSecondStep } from \"../../../actions/authActions\";\nclass SignUpStepSecond extends Component {\n\n    state = {\n      username: null,\n    };\n\n    submitForm = (data) => {\n        const { history, hospital_credentials, postRegisterSecondStep } = this.props;\n        let clinic_info = JSON.parse(localStorage.getItem(\"clinic_info\"));\n        clinic_info.email = (data && data.email ? data.email : '');\n        clinic_info.username = (data && data.full_name);\n        clinic_info.phone = ( data && data.phone ? data.phone : '');\n        postRegisterSecondStep(clinic_info).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 201) {\n                localStorage.setItem('clinic_id', res.payload.data.id);\n                history.push('/auth/sign-up/third-step');\n            }\n        });\n    };\n\n\n\n    render(){\n        const {handleSubmit, submitting, pristine, valid,  } = this.props;\n        return (\n            <form onSubmit={handleSubmit(this.submitForm)}>\n                <Link to={`/auth/sign-up`} className=\"back_step\">\n                    <img src={arrow} alt=\"arrow\"/>\n                    Step 1\n                </Link>\n                <h3 className=\"auth-block_head\">Sign up to VIEBEG</h3>\n                <h3 className=\"auth-block_descriptions\">Provide information about your business owner or director</h3>\n                <div className=\"block_field\">\n                    <span>Full name</span>\n                    <Field name=\"full_name\" type=\"text\" component={RenderField} placeholder=\"Type here…\"/>\n                </div>\n                <div className=\"block_custom_field\">\n                    <div className=\"block_field\">\n                        <span>Email <p>(optional)</p></span>\n                        <Field name=\"email\" type=\"text\" component={RenderField} placeholder=\"Type here…\"/>\n                    </div>\n                    <div className=\"block_field custom_field_phone\">\n                        <span>Phone number <p>(optional)</p></span>\n                        <Field name=\"phone\" type=\"number\" component={RenderField} placeholder=\"Type here…\"/>\n                    </div>\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        type=\"submit\"\n                        disabled={submitting || pristine || !valid}\n                        // loading={loading}\n                        formAction\n                    >\n                        Next\n                    </DefaultButton>\n                </div>\n\n            </form>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    const regExp = new RegExp(/^([A-Za-z '.-]+){1}$/g);\n    if (!values.full_name) {\n        errors.full_name = 'Required'\n    } else if (!regExp.test(values.full_name)) {\n        errors.full_name = 'Invalid name'\n    }\n    if (values.phone && values.phone.length < 6 ) {\n        errors.phone = 'Must be from 6 characters to 16'\n    }else if(values.phone && values.phone.length > 16 ){\n        errors.phone = 'Must be from 6 characters to 16'\n    }\n    return errors\n};\n\nSignUpStepSecond = reduxForm({\n    form: 'SignUpStepSecondForm',\n    validate\n})(SignUpStepSecond);\n\nfunction  mapStateToProps(state, props) {\n    return{\n        hospital_credentials: state.auth.hospital_credentials,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postRegisterSecondStep,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpStepSecond);","import React, {Component} from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DefaultButton from '../../Buttons/DefaultButton/DefaultButton';\nimport { Link } from 'react-router-dom';\nimport DialogComponent from \"../../HelperComponents/DialogComponent/DialogComponent\";\nimport arrow from '../../../assets/image/Path.svg';\nimport { sendMessage } from '../../../actions/authActions';\nimport { resetErrorUsers } from '../../../actions/UserActions';\n\nclass SignUpStepThird extends Component {\n\n    state = {\n        open: false\n    };\n\n    toggleDialog = () => {\n        const { history } = this.props;\n\n        this.setState(({open}) => ({\n            open: !open\n        }));\n\n        if(this.state.open) history.push(`/auth/sign-in`);\n    };\n\n    resetError = () =>{\n        const {resetErrorUsers} = this.props;\n        resetErrorUsers()\n    };\n\n    submitForm = (data) => {\n        const { sendMessage } = this.props;\n        let description = {\n            message: data.description ? data.description : ''\n        };\n        let clinic_id = localStorage.getItem('clinic_id');\n        sendMessage(description, clinic_id).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 201) {\n            }\n        })\n    };\n\n    render(){\n        const { open } = this.state;\n        const {handleSubmit, valid } = this.props;\n        return (\n            <form onSubmit={handleSubmit(this.submitForm)}>\n                <Link to={`/auth/sign-up/second-step`} className=\"back_step\">\n                    <img src={arrow} alt=\"arrow\"/>\n                    Step 2\n                </Link>\n                <h3 className=\"auth-block_head\">Sign up to VIEBEG</h3>\n                <h3 className=\"auth-block_descriptions\">We are ready to go! You can give us more information if you want.</h3>\n                <div className=\"block_field\">\n                    <span>Additional notes, 300 symbols<p>(optional)</p></span>\n                    <Field\n                        name=\"description\"\n                        className=\"textarea\"\n                        component=\"textarea\"\n                        placeholder=\"Type here...\"\n                    />\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        formAction\n                        onClick={this.toggleDialog}\n                        disabled={!valid}\n                    >\n                        Sign up\n                    </DefaultButton>\n                </div>\n\n                <DialogComponent\n                    open={open}\n                    onClose={() => this.toggleDialog('')}\n                >\n                    <div className=\"auth_dialog_wrapper\">\n                        <div className=\"title\">Thank you for your registration</div>\n                        <div className=\"descriptions\">\n                            Your details have been sent to our team and are currently under review. <br/>\n                            You will soon receive a confirmation with log in details.\n                        </div>\n                        <DefaultButton\n                            variant=\"outlined\"\n                            type=\"link\"\n                            classes=\"blue_btn\"\n                            to={`/auth/sign-in`}\n                            onClick={this.resetError}\n                        >\n                            ok\n                        </DefaultButton>\n                    </div>\n                </DialogComponent>\n            </form>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    if (values.description && !/^.{0,300}$/.test(values.description)) {\n        errors.description = 'Maximum 300 symbols'\n    }\n    return errors\n};\n\nSignUpStepThird = reduxForm({\n    form: 'SignUpStepThirdForm',\n    validate\n})(SignUpStepThird);\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        sendMessage,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(SignUpStepThird);","import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport RenderField from \"../../../HelperComponents/RenderField/RenderField\";\nimport DefaultButton from '../../../Buttons/DefaultButton/DefaultButton';\nimport { Link } from 'react-router-dom';\nimport arrow from '../../../../assets/image/Path.svg';\nimport { postResetPassword } from '../../../../actions/authActions';\nimport { resetErrorUsers } from '../../../../actions/UserActions';\n\nclass FirstStep extends Component {\n\n    state = {\n      loading: false,\n    };\n\n    submitForm = (data) => {\n        const { postResetPassword, history, resetErrorUsers } = this.props;\n        this.setState({loading: true});\n        postResetPassword(data).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n\n                history.push(`/auth/password-recovery/second-step/`);\n                resetErrorUsers()\n            }else{\n                this.setState({loading: false});\n            }\n        })\n\n    };\n    render(){\n        const { handleSubmit, submitting, pristine, valid, step_fail, resetErrorUsers } = this.props;\n        const { loading } = this.state;\n        return (\n            <form onSubmit={handleSubmit(this.submitForm)}>\n                <Link to={`/auth/sign-in`} onClick={resetErrorUsers} className=\"back_step\">\n                    <img src={arrow} alt=\"arrow\"/>\n                    sign in\n                </Link>\n                <h3 className=\"auth-block_head\">Reset password</h3>\n                <h3 className=\"auth-block_descriptions\">Enter your email to continue</h3>\n                <div className=\"block_field\">\n                    <span>Email<span className='back_error'>{!!step_fail && step_fail.email}</span></span>\n                    <Field name=\"email\" type=\"text\" component={RenderField} placeholder=\"Type here…\"/>\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        type=\"submit\"\n                        disabled={submitting || pristine || !valid}\n                        loading={loading}\n                        formAction\n                    >\n                        Next\n                    </DefaultButton>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.company) {\n        errors.company = 'Required'\n    } else if (values.company.length < 3) {\n        errors.company = 'Must be 3 characters or more'\n    }\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,5}$/i.test(values.email)) {\n        errors.email = 'Invalid email'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    }\n    if (!values.phone) {\n        errors.phone = 'Required'\n    }\n    if (!values.address) {\n        errors.address = 'Required'\n    }\n    return errors\n};\n\nFirstStep = reduxForm({\n    form: 'FirstStepForm',\n    validate\n})(FirstStep);\n\nfunction  mapStateToProps(state, props) {\n    return{\n        step_fail: state.auth.error,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postResetPassword,\n        resetErrorUsers\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FirstStep);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport arrow from '../../../../assets/image/Path.svg';\nimport email from '../../../../assets/image/email.svg';\n\nclass SecondStep extends Component {\n\n    render(){\n        return (\n            <div className=\"block_custom_auth_page\">\n                <Link to={`/auth/sign-in`} className=\"back_step\">\n                    <img src={arrow} alt=\"arrow\"/>\n                    sign in\n                </Link>\n                <h3 className=\"auth-block_head\">Reset password</h3>\n                <h3 className=\"auth-block_descriptions\">We have sent you an email with a link to reset your password</h3>\n                <div className=\"block_key\" >\n                    <img src={email} alt=\"email\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n    }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(SecondStep);","import React, {Component} from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport RenderField from \"../../../HelperComponents/RenderField/RenderField\";\nimport DefaultButton from '../../../Buttons/DefaultButton/DefaultButton';\nimport { postPasswordApprove } from '../../../../actions/authActions';\n\n\nclass ThirdStep extends Component {\n\n    state = {\n        loading: false,\n    };\n\n    submitForm = (data) => {\n        const { postPasswordApprove, location:{search}, history } = this.props;\n        this.setState({loading: true});\n        let params = new URLSearchParams(search.substring(1));\n        let obj = {\n            security_token: params.get('security_token'),\n            password: data.password,\n            password_check: data.password_check\n        };\n        postPasswordApprove(obj).then(res => {\n            if(res.payload && res.payload.status && res.payload.status === 200) {\n                this.setState({loading: false});\n                history.push(`/auth/password-recovery/fourth-step/`)\n            }\n        })\n    };\n\n    render(){\n        const {handleSubmit, submitting, pristine, valid, security_token } = this.props;\n        const { loading } = this.state;\n        return (\n            <form onSubmit={handleSubmit(this.submitForm)}>\n                <h3 className=\"auth-block_head\">Password change</h3>\n                <h3 className=\"auth-block_descriptions\">Enter and confirm your new password</h3>\n                <div className=\"block_field\">\n                    <span>New password</span>\n                    <Field name=\"password\" type=\"password\" component={RenderField} placeholder=\"Type here…\"/>\n                </div>\n                <div className=\"block_field\">\n                    <span>Confirm password</span>\n                    <Field name=\"password_check\" type=\"password\" component={RenderField} placeholder=\"Type here…\"/>\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        disabled={submitting || pristine || !valid}\n                        loading={loading}\n                        formAction\n                        type=\"submit\"\n                    >\n                        Next\n                    </DefaultButton>\n                </div>\n                <span className='back_error third'>{!!security_token && security_token.security_token}</span>\n            </form>\n        );\n    }\n}\n\nconst validate = values => {\n    const errors = {};\n    if (!values.password) {\n        errors.password = 'Required'\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be 8 characters or more'\n    }\n    if (!values.password_check) {\n        errors.password_check = 'Required'\n    } else if (values.password_check !== values.password) {\n        errors.password_check = 'This password does not match the password below'\n    }\n    return errors\n};\n\nThirdStep = reduxForm({\n    form: 'ThirdStepForm',\n    validate\n})(ThirdStep);\n\nfunction  mapStateToProps(state, props) {\n    return{\n        security_token: state.auth.error,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        postPasswordApprove\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThirdStep);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport DefaultButton from '../../../Buttons/DefaultButton/DefaultButton';\nimport password from '../../../../assets/image/password.svg';\n\nclass FourthStep extends Component {\n\n    render(){\n        return (\n            <div className=\"block_custom_auth_page\">\n                <h3 className=\"auth-block_head\">Password change</h3>\n                <h3 className=\"auth-block_descriptions\">Your new password have been set successfully. <br/>Now you can sign in.</h3>\n                <div className=\"block_key\" >\n                    <img src={password} alt=\"password\"/>\n\n                </div>\n                <div className=\"auth_btn_wrapper\">\n                    <DefaultButton\n                        variant=\"contained\"\n                        type=\"link\"\n                        to=\"/\"\n                    >\n                        Sign in\n                    </DefaultButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n    }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(FourthStep);","import React, {Fragment} from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from \"../../components/Auth/Login/Login\";\nimport SignUp from \"../../components/Auth/Register/SignUp\";\nimport SignUpStepSecond from \"../../components/Auth/Register/SignUpStepSecond\";\nimport SignUpStepThird from \"../../components/Auth/Register/SignUpStepThird\";\nimport FirstStep from \"../../components/Auth/PasswordRecovery/FirstStep/FirstStep\";\nimport SecondStep from \"../../components/Auth/PasswordRecovery/SecondStep/SecondStep\";\nimport ThirdStep from \"../../components/Auth/PasswordRecovery/ThirdStep/ThirdStep\";\nimport FourthStep from \"../../components/Auth/PasswordRecovery/FourthStep/FourthStep\";\nimport Logo from '../../assets/image/new logo.svg';\nimport bgImg from '../../assets/image/graph.png';\n\nimport './AuthContainer.scss';\n\n\nconst AuthContainer = (props) => {\n    const { match } = props;\n    if(!!localStorage.token) return <Redirect to=\"/main/dashboard\" />;\n\n    return (\n        <Fragment>\n            <main className=\"auth_container\">\n                <div className=\"auth-box\">\n                    <div className=\"auth_bg\">\n                        <div className=\"auth_logo\">\n                            <img src={Logo} alt=\"logo\"/>\n                        </div>\n                        <img className=\"bgImg\" src={bgImg} alt=\"bgImg\"/>\n                    </div>\n                    <div className=\"auth_content\">\n                        <Switch>\n                            <Route path={`${match.url}`} exact component={Login} />\n                            <Route path={`${match.url}/sign-in`} exact component={Login} />\n                            <Route path={`${match.url}/sign-up`} exact component={SignUp} />\n                            <Route path={`${match.url}/sign-up/second-step`} exact component={SignUpStepSecond} />\n                            <Route path={`${match.url}/sign-up/third-step`} exact component={SignUpStepThird} />\n                            <Route path={`${match.url}/password-recovery/first-step`} exact component={FirstStep} />\n                            <Route path={`${match.url}/password-recovery/second-step`} exact component={SecondStep} />\n                            <Route path={`${match.url}/reset-password/approve`} component={ThirdStep} />\n                            <Route path={`${match.url}/password-recovery/fourth-step`} exact component={FourthStep} />\n                            <Route render={()=>(<p>Not found</p>)} />\n                        </Switch>\n                    </div>\n                </div>\n            </main>\n        </Fragment>\n    );\n};\n\nexport default AuthContainer;","import React from 'react';\nimport App from '../containers/App';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport Container from '../containers/Container/Container';\nimport AuthContainer from '../containers/AuthContainer/AuthContainer';\n\nexport default (\n    <App>\n        <Switch>\n            <Route path='/' exact render={() => !!localStorage.token ? <Redirect to='/main/dashboard' /> : <Redirect to='/auth/sign-in'/>}/>\n            <Route path='/auth' component={AuthContainer} />\n            <Route path='/main' component={Container} />\n            <Route render={()=>(<p>Not found</p>)}/>\n        </Switch>\n    </App>\n)\n","import * as types from \"../actions/constants\";\n\nconst INITIAL_STATE = {\n    hospital_credentials: {},\n    error: {},\n};\n\nexport default function(state = INITIAL_STATE, action) {\n    switch(action.type) {\n        case types.REGISTER_FIRST_STEP_SUCCESS:\n            return {...state, hospital_credentials: action.payload.data};\n        case types.REGISTER_FIRST_STEP_FAIL:\n            return {...state, error: action.error.response.data};\n        case types.LOGIN_FAIL:\n            return {...state, error: action.error.response.data};\n        case types.CHANGE_PASSWORD_FAIL:\n            return {...state, error: action.error.response.data};\n            case types.RESET_PASSWORD_FAIL:\n            return {...state, error: action.error.response.data};\n        case types.RESET_USER_ERROR:\n            return { ...state, error: {} };\n        default:\n            return state;\n    }\n}","import * as types from \"../actions/constants\";\n\nconst INITIAL_STATE = {\n    users_list: {},\n    error: {},\n};\n\nexport default function(state = INITIAL_STATE, action) {\n    switch(action.type) {\n        case types.GET_USERS_LIST_SUCCESS:\n            return {...state, users_list: action.payload.data};\n        case types.POST_ADD_USER_FAIL:\n            return {...state, error: action.error.response.data};\n            case types.PATCH_USER_FAIL:\n            return {...state, error: action.error.response.data};\n        case types.RESET_USER_ERROR:\n            return { ...state, error: {} };\n        default:\n            return state;\n    }\n}","import * as types from \"../actions/constants\";\n\nconst INITIAL_STATE = {\n    // users_list: {},\n\n};\n\nexport default function(state = INITIAL_STATE, action) {\n    switch(action.type) {\n        // case types.GET_USERS_LIST_SUCCESS:\n        //     return {...state, users_list: action.payload.data};\n        default:\n            return state;\n    }\n}","import * as types from \"../actions/constants\";\n\nconst INITIAL_STATE = {\n    clinicLog: [],\n    clinicDashBoard: []\n};\n\nexport default function(state = INITIAL_STATE, action) {\n    switch(action.type) {\n        case types.GET_CLINIC_LOG_SUCCESS :\n            return {...state, clinicLog : action.payload.data.results};\n        case types.GET_CLINIC_DASH_BOARD_SUCCESS :\n            return {...state, clinicDashBoard : action.payload.data};\n\n        default:\n            return state;\n    }\n}","import * as types from \"../actions/constants\";\n\nconst INITIAL_STATE = {\n    activityLog: []\n};\n\nexport default function(state = INITIAL_STATE, action) {\n    switch(action.type) {\n        case types.GET_ACTIVITY_SUCCESS :\n            return {...state, activityLog : action.payload.data};\n        default:\n            return state;\n    }\n}","import * as types from \"../actions/constants\";\n\nconst INITIAL_STATE = {\n    stock_list: {},\n    search_list: {},\n    error: {},\n};\n\nexport default function(state = INITIAL_STATE, action) {\n    switch(action.type) {\n        case types.GET_STOCK_SUCCESS:\n            return {...state, stock_list: action.payload.data};\n        case types.SEARCH_STOCK_SUCCESS:\n            return {...state, search_list: action.payload.data};\n        case types.POST_REQUEST_FAIL:\n            return {...state, error: action.error.response.data};\n            case types.PATCH_QUANTITY_FAIL:\n            return {...state, error: action.error.response.data};\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { connectRouter } from 'connected-react-router';\nimport { reducer as formReducer } from 'redux-form';\nimport  reduceAuth from '../reducers/reduceAuth';\nimport reduceUsers from \"./reduceUsers\";\nimport reduceCatalog from \"./reduceCatalog\";\nimport  reduceDashboard from './reduceDashboard';\nimport  reduceActivity from './reduceActivity';\nimport reduceStock from \"./reduceStock\";\n\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    form: formReducer,\n    auth: reduceAuth,\n    users: reduceUsers,\n    catalog: reduceCatalog,\n    dashboard: reduceDashboard,\n    activity: reduceActivity,\n    stock: reduceStock,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router'\nimport { multiClientMiddleware } from 'redux-axios-middleware';\n\nimport api from \"./actions/api\";\nimport routes from './routes/routes';\nimport rootReducer from './reducers';\n\nconst axiosMiddlewareOptions = {\n    interceptors: {\n        request: [\n            (action, config) => {\n                if (localStorage.token || localStorage.token_res) {\n                    let token = localStorage.token ? localStorage.token : localStorage.token_res;\n                    config.headers['Authorization'] = 'Token ' + token\n                }\n                return config;\n            }\n        ]\n    }\n};\n\nconst history = createBrowserHistory();\nconst appRouterMiddleware = routerMiddleware(history);\nconst createStoreWithMiddleware = applyMiddleware(multiClientMiddleware(api, axiosMiddlewareOptions), appRouterMiddleware)(createStore);\nconst store = createStoreWithMiddleware(rootReducer(history), {}, window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history} children={routes}/>\n    </Provider>,\n    document.getElementById('wrapper')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/Path.870abc01.svg\";","module.exports = __webpack_public_path__ + \"static/media/new logo.7a19b09f.svg\";"],"sourceRoot":""}